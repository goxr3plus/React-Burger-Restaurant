{"version":3,"sources":["components/Logo/Logo.module.css","assets/Images/burger-logo.png","axios-orders.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","components/Order/Order.js","containers/Checkout/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","__webpack_require__","p","axiosInstance","axios","create","baseURL","button","props","react_default","a","createElement","className","btnType","join","onClick","clicked","children","OrderSummary","prevProps","prevState","_this","this","ingredientSummary","Object","keys","ingredients","map","igKey","key","style","textTransform","Fragment","totalPrice","Button_Button","cancelPurchaseHandler","continuePurchaseHandler","Component","BuildControl","label","remove","disabled","add","controls","type","BuildControls","toFixed","cntrl","BuildControls_BuildControl_BuildControl","disabledInfo","purchasable","purchaseHandler","BurgerIngredient","ingredient","withRouter","transformedIngredients","i","Burger_BurgerIngredient_BurgerIngredient","length","classy","Backdrop","show","Modal","nextProps","nextState","nextProp","UI_Backdrop_Backdrop","transform","opacity","Spinner","textAlign","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","error","errorConfirmedHandler","setState","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","respInterceptor","response","res","eject","UI_Modal_Modal","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","purchasing","loading","isBurgerEmpty","updatePurchaseState","addIngredientHandler","ingredientType","updatedIngredients","push","newPrice","removeIngredientHandler","lastIndex","lastIndexOf","splice","queryParams","qs","stringify","history","pathname","search","get","then","data","catch","objectSpread","orderSummary","burger","UI_Spinner_Spinner","Burger_Burger","Burger_BuildControls_BuildControls","Burger_OrderSummary_OrderSummary","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","ContactData","name","email","address","street","postalCode","orderHandler","event","preventDefault","order","price","customer","zipCode","country","deliveryMethod","post","form","placeholder","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","totalPrize","location","split","parse","ignoreQueryPrefix","values","CheckoutSummary_CheckoutSummary","Route","path","match","render","Checkout_ContactData_ContactData","assign","src","burgerLogo","alt","navigationItem","NavLink","to","link","exact","activeClassName","classes","active","navigationItems","NavigationItem_NavigationItem","sideDrawer","attachedClasses","open","closed","LogoModule","components_Logo_Logo","NavigationItems_NavigationItems","drawerToggle","toolbar","DrawerToggle_DrawerToggle","showSideDrawer","Layout","sideDrawerClosedHandler","sideDrawerToggleHandler","Toolbar_Toolbar","SideDrawer_SideDrawer","ingredientOutput","index","display","border","padding","orders","fetchedOrders","id","err","Order_Order","App","hoc_Layout_Layout","Switch","component","Orders","BurgerBuilder","Boolean","window","hostname","app","BrowserRouter","basename","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d863f93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1RykQ\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL: \"https://react-my-burger-c7029.firebaseio.com/\",\r\n})\r\n\r\nexport default axiosInstance\r\n","import React from \"react\"\r\nimport \"./Button.css\"\r\n\r\nconst button = props => (\r\n   <button className={[\"Button\", props.btnType].join(\" \")} onClick={props.clicked}>\r\n      {props.children}\r\n   </button>\r\n)\r\n\r\nexport default button\r\n","import React, { Component } from \"react\"\r\nimport Button from \"./../../UI/Button/Button\"\r\n\r\nclass OrderSummary extends Component {\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // console.log(\"[OrderSummary.js] componentDidUpdate\")\r\n   }\r\n\r\n   render() {\r\n      const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\r\n         return (\r\n            <li key={igKey}>\r\n               <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n            </li>\r\n         )\r\n      })\r\n\r\n      return (\r\n         <>\r\n            <h3> Your Order</h3>\r\n            <p> A delicious burger with the following ingredients:</p>\r\n            <ul>{ingredientSummary}</ul>\r\n            <p>\r\n               <strong>Total Price:{this.props.totalPrice}</strong>\r\n            </p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.cancelPurchaseHandler}>\r\n               Cancel\r\n            </Button>\r\n            <Button btnType=\"Success\" clicked={this.props.continuePurchaseHandler}>\r\n               Continue\r\n            </Button>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default OrderSummary\r\n","import React from \"react\"\r\nimport \"./BuildControl.css\"\r\n\r\nconst BuildControl = props => (\r\n   <div className={\"BuildControl\"}>\r\n      <div className={\"Label\"}>{props.label}</div>\r\n      <button className={\"Less\"} onClick={props.remove} disabled={props.disabled}>\r\n         -\r\n      </button>\r\n      <button className={\"More\"} onClick={props.add}>\r\n         +\r\n      </button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControl\r\n","import React from \"react\"\r\nimport \"./BuildControls.css\"\r\nimport BuildControl from \"./BuildControl/BuildControl\"\r\n\r\nconst controls = [\r\n   { label: \"Salad\", type: \"salad\" },\r\n   { label: \"Bacon\", type: \"bacon\" },\r\n   { label: \"Cheese\", type: \"cheese\" },\r\n   { label: \"Meat\", type: \"meat\" },\r\n]\r\n\r\nconst BuildControls = props => (\r\n   <div className={\"BuildControls\"}>\r\n      <p> Current Price: <strong>{props.totalPrice.toFixed(2)}</strong></p>\r\n      {controls.map(cntrl => {\r\n         return (\r\n            <BuildControl\r\n               key={cntrl.label}\r\n               label={cntrl.label}\r\n               add={() => props.add(cntrl.type)}\r\n               remove={() => props.remove(cntrl.type)}\r\n               disabled={props.disabledInfo[cntrl.type]}\r\n            />\r\n         )\r\n      })}\r\n      <button className={\"OrderButton\"} disabled={!props.purchasable} onClick={props.purchaseHandler}>Order Now</button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControls\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './BurgerIngredient.css'\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={\"BreadBottom\"}> </div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={\"BreadTop\"}>\r\n            <div className={\"Seeds1\"}> </div>\r\n            <div className={\"Seeds2\"}> </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={\"Meat\"}> </div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={\"Cheese\"}> </div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={\"Bacon\"}> </div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={\"Salad\"}> </div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\"\r\nimport \"./Burger.css\"\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst burger = props => {\r\n   // console.log(props)\r\n   let transformedIngredients = props.ingredients\r\n      .map((igKey,i) => {\r\n         //  console.log(\"Ig Key :\" + igKey)\r\n          return <BurgerIngredient key={igKey + i} type={igKey} />\r\n      })\r\n    \r\n   if (transformedIngredients.length === 0) transformedIngredients = <p>Please start adding ingredients!</p>\r\n   return (\r\n      <div className={props.classy==null?\"Burger\":\"Burger2\"}>\r\n         <BurgerIngredient type=\"bread-top\" />\r\n         {transformedIngredients}\r\n         <BurgerIngredient type=\"bread-bottom\" />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default withRouter(burger)\r\n","import React from \"react\"\r\nimport \"./Backdrop.css\"\r\n\r\nconst Backdrop = props => (props.show ? <div className={\"Backdrop\"} onClick={props.clicked}/> : null)\r\n\r\nexport default Backdrop\r\n","import React, { Component } from \"react\"\r\nimport Backdrop from \"./../Backdrop/Backdrop\"\r\nimport \"./Modal.css\"\r\n\r\nclass Modal extends Component {\r\n   shouldComponentUpdate(nextProps, nextState) {\r\n      return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n   }\r\n\r\n   componentWillUpdate(nextProp, nextState) {\r\n      // console.log(\"model will update\")\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Backdrop show={this.props.show} clicked={this.props.cancelPurchaseHandler} />\r\n            <div\r\n               className={\"Modal\"}\r\n               style={{\r\n                  transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                  opacity: this.props.show ? \"1\" : \"0\",\r\n               }}\r\n            >\r\n               {this.props.children}\r\n            </div>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Modal\r\n","import React from \"react\"\r\nimport \"./Spinner.css\"\r\n\r\nconst Spinner = props => (\r\n   <div style={{ textAlign: \"center\" }}>\r\n      <div className=\"Loader\" />\r\n   </div>\r\n)\r\n\r\nexport default Spinner\r\n","import React, { Component } from \"react\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\n\r\nconst withErrorHandler = (WrappedComponent, axiosInstance) => {\r\n   return class extends Component {\r\n      state = {\r\n         error: null,\r\n      }\r\n\r\n      componentWillMount() {\r\n         this.reqInterceptor = axiosInstance.interceptors.request.use(req => {\r\n            this.setState({ error: null })\r\n            return req\r\n         })\r\n\r\n         this.respInterceptor = axiosInstance.interceptors.response.use(\r\n            res => res,\r\n            error => {\r\n               this.setState({ error: error })\r\n            }\r\n         )\r\n      }\r\n\r\n      componentWillUnmount() {\r\n         axiosInstance.interceptors.request.eject(this.reqInterceptor)\r\n         axiosInstance.interceptors.response.eject(this.respInterceptor)\r\n      }\r\n\r\n      errorConfirmedHandler = () => {\r\n         this.setState({ error: null })\r\n      }\r\n\r\n      render() {\r\n         return (\r\n            <>\r\n               <Modal show={this.state.error} cancelPurchaseHandler={this.errorConfirmedHandler}>\r\n                  {this.state.error ? this.state.error.message : null}\r\n               </Modal>\r\n               <WrappedComponent {...this.props} />\r\n            </>\r\n         )\r\n      }\r\n   }\r\n}\r\n\r\nexport default withErrorHandler\r\n","import React, { Component } from \"react\"\r\nimport axiosInstance from \"../../axios-orders\"\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\r\nimport BuildControls from \"./../../components/Burger/BuildControls/BuildControls\"\r\nimport Burger from \"./../../components/Burger/Burger\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\"\r\nimport withErrorHandler from \"./../../hoc/withErrorHandler/withErrorHandler\"\r\n\r\nimport qs from \"qs\"\r\n\r\nconst INGREDIENT_PRICES = {\r\n   salad: 0.5,\r\n   cheese: 0.4,\r\n   meat: 1.3,\r\n   bacon: 0.7,\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n   state = {\r\n      ingredients: [],\r\n      totalPrice: 4,\r\n      purchasable: false,\r\n      purchasing: false,\r\n      loading: false,\r\n      error: false,\r\n   }\r\n\r\n   componentWillMount(props) {\r\n      // ingredients: [\"salad\", \"bacon\", \"cheese\", \"meat\"]\r\n      axiosInstance\r\n         .get(\"ingredients.json\")\r\n         .then(response => {\r\n            // console.log(this.state.ingredients)\r\n            this.setState({\r\n               ingredients: [\"salad\", \"bacon\", \"cheese\", \"meat\"],\r\n               purchasable: !this.isBurgerEmpty(response.data),\r\n            })\r\n         })\r\n         .catch(error => {\r\n            this.setState({ error: true })\r\n            // console.log(error)\r\n         })\r\n   }\r\n\r\n   isBurgerEmpty = ingredients => {\r\n      // console.log(\"Ingredients Length :\",ingredients.length)\r\n      return ingredients.length === 0\r\n   }\r\n\r\n   updatePurchaseState = ingredients => {\r\n      this.setState({ purchasable: !this.isBurgerEmpty(ingredients) })\r\n   }\r\n\r\n   addIngredientHandler = ingredientType => {\r\n      const updatedIngredients = this.state.ingredients\r\n      updatedIngredients.push(ingredientType)\r\n\r\n      /* Calculate the New Price */\r\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[ingredientType]\r\n      this.setState({ totalPrice: newPrice, ingredients: updatedIngredients })\r\n      this.updatePurchaseState(updatedIngredients)\r\n   }\r\n\r\n   removeIngredientHandler = ingredientType => {\r\n      const updatedIngredients = this.state.ingredients\r\n      let lastIndex = updatedIngredients.lastIndexOf(ingredientType)\r\n\r\n      // Enter if there are ingredients of this type\r\n      if (lastIndex !== -1) {\r\n         // Remove the last ingredient matching this type\r\n         updatedIngredients.splice(lastIndex, 1)\r\n\r\n         /* Calculate the New Price */\r\n         const newPrice = this.state.totalPrice - INGREDIENT_PRICES[ingredientType]\r\n         this.setState({ totalPrice: newPrice, ingredients: updatedIngredients })\r\n         this.updatePurchaseState(updatedIngredients)\r\n      }\r\n   }\r\n\r\n   purchaseHandler = () => {\r\n      this.setState({ purchasing: true })\r\n   }\r\n\r\n   cancelPurchaseHandler = () => {\r\n      this.setState({ purchasing: false })\r\n   }\r\n\r\n   continuePurchaseHandler = () => {\r\n \r\n      //const queryParams = []\r\n      const queryParams = qs.stringify(this.state.ingredients);\r\n      //queryParams.push(encodeURIComponent(\"ingedients\") + \"=\" + encodeURIComponent(this.state.ingredients))\r\n      // for (let i in this.state.ingredients) {\r\n      //    queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i]))\r\n      // }\r\n\r\n      this.props.history.push({\r\n         pathname: \"/checkout\",\r\n         search: \"?\" + queryParams+\":\"+this.state.totalPrice.toFixed(2), //.join(\"&\"),\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const disabledInfo = {\r\n         ...this.state.ingredients,\r\n      }\r\n\r\n      for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0\r\n\r\n      let orderSummary = null\r\n      let burger = this.state.error ? <p style={{ textAlign: \"center\" }}> Ingredients can't be loaded </p> : <Spinner />\r\n      if (this.state.ingredients !== null) {\r\n         // Burger\r\n         burger = (\r\n            <>\r\n               <Burger ingredients={this.state.ingredients} />\r\n               <BuildControls\r\n                  disabledInfo={disabledInfo}\r\n                  add={this.addIngredientHandler}\r\n                  remove={this.removeIngredientHandler}\r\n                  totalPrice={this.state.totalPrice}\r\n                  purchasable={this.state.purchasable}\r\n                  purchaseHandler={this.purchaseHandler}\r\n               />\r\n            </>\r\n         )\r\n\r\n         // OrderSummary\r\n         orderSummary = this.state.loading ? (\r\n            <Spinner />\r\n         ) : (\r\n            <OrderSummary\r\n               totalPrice={this.state.totalPrice.toFixed(2)}\r\n               ingredients={this.state.ingredients}\r\n               cancelPurchaseHandler={this.cancelPurchaseHandler}\r\n               continuePurchaseHandler={this.continuePurchaseHandler}\r\n            />\r\n         )\r\n      }\r\n\r\n      if (this.state.loading) orderSummary = <Spinner />\r\n\r\n      return (\r\n         <>\r\n            <Modal show={this.state.purchasing} cancelPurchaseHandler={this.cancelPurchaseHandler}>\r\n               {orderSummary}\r\n            </Modal>\r\n            {burger}\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axiosInstance)\r\n","import React from \"react\"\r\nimport Burger from \"./../../Burger/Burger\"\r\nimport Button from \"./../../UI/Button/Button\"\r\nimport \"./CheckoutSummary.css\"\r\n\r\nconst checkoutSummary = props => (\r\n   <div className=\"CheckoutSummary\">\r\n      <h1> We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n         <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n         Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n         Continue\r\n      </Button>\r\n   </div>\r\n)\r\n\r\nexport default checkoutSummary\r\n","import React, { Component } from \"react\"\r\nimport Button from \"../../../components/UI/Button/Button\"\r\nimport \"./ContactData.css\"\r\nimport axiosInstance from \"./../../../axios-orders\"\r\nimport Spinner from \"./../../../components/UI/Spinner/Spinner\"\r\n\r\nclass ContactData extends Component {\r\n   state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      address: {\r\n         street: \"\",\r\n         postalCode: \"\",\r\n      },\r\n      loading: false,\r\n   }\r\n\r\n   orderHandler = event => {\r\n      event.preventDefault()\r\n      this.setState({ loading: true })\r\n      const order = {\r\n         ingredients: this.props.ingredients,\r\n         price: this.props.totalPrice,\r\n         customer: {\r\n            name: \"Max\",\r\n            address: {\r\n               address: \"Testreet 1\",\r\n               zipCode: \"324324\",\r\n               country: \"Germany\",\r\n            },\r\n            email: \"goxr3plus@gmail.com\",\r\n         },\r\n         deliveryMethod: \"fastest\",\r\n      }\r\n\r\n      //Firebase specific\r\n      axiosInstance\r\n         .post(\"/orders.json\", order)\r\n         .then(response => {\r\n            this.setState({ loading: false })\r\n            this.props.history.push(\"/\")\r\n         })\r\n         .catch(error => this.setState({ loading: false }))\r\n   }\r\n\r\n   render() {\r\n      let form = this.state.loading ? (\r\n         <Spinner />\r\n      ) : (\r\n         <form>\r\n            <input className=\"Input\" type=\"text\" name=\"name\" placeholder=\"Your Name\" />\r\n            <input className=\"Input\" type=\"email\" name=\"email\" placeholder=\"Your Email\" />\r\n            <input className=\"Input\" type=\"text\" name=\"street\" placeholder=\"Street\" />\r\n            <input className=\"Input\" type=\"text\" name=\"postal\" placeholder=\"Post Code\" />\r\n            <Button btnType=\"Success\" clicked={this.orderHandler}>\r\n               ORDER2\r\n            </Button>\r\n         </form>\r\n      )\r\n      return (\r\n         <div className=\"ContactData\">\r\n            <h4> Enter your contact data</h4>\r\n            {form}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default ContactData\r\n","import qs from \"qs\"\r\nimport React, { Component } from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\"\r\nimport ContactData from \"./ContactData/ContactData\"\r\n\r\nclass Checkout extends Component {\r\n   state = {\r\n      ingredients: [],\r\n      totalPrice: 0,\r\n   }\r\n\r\n   componentWillMount() {\r\n      const totalPrize = +this.props.location.search.split(\":\")[1]\r\n      const ingredients = qs.parse(this.props.location.search.split(\":\")[0], { ignoreQueryPrefix: true })\r\n      this.setState({ ingredients: Object.values(ingredients), totalPrice: totalPrize })\r\n   }\r\n\r\n   checkoutCancelledHandler = () => {\r\n      this.props.history.goBack()\r\n   }\r\n\r\n   checkoutContinuedHandler = () => {\r\n      this.props.history.replace(\"/checkout/contact-data\")\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <CheckoutSummary\r\n               ingredients={this.state.ingredients}\r\n               checkoutCancelled={this.checkoutCancelledHandler}\r\n               checkoutContinued={this.checkoutContinuedHandler}\r\n            />\r\n            <Route\r\n               path={this.props.match.path + \"/contact-data\"}\r\n               render={(props) => <ContactData ingredients={this.state.ingredients} totalPrice={this.state.totalPrice} {...props} />}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Checkout\r\n","import React from \"react\"\r\nimport burgerLogo from \"../../assets/Images/burger-logo.png\"\r\nimport \"./Logo.css\"\r\n\r\nconst Logo = props => (\r\n   <div className=\"Logo\">\r\n      <img src={burgerLogo} alt=\"My Burger\" />\r\n   </div>\r\n)\r\n\r\nexport default Logo\r\n","import React from \"react\"\r\nimport classes from \"./NavigationItem.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst navigationItem = props => (\r\n   <li className=\"NavigationItem\">\r\n      <NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>{props.children}</NavLink>\r\n   </li>\r\n)\r\n\r\nexport default navigationItem\r\n","import React from \"react\"\r\nimport \"./NavigationItems.css\"\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\"\r\n\r\nconst navigationItems = () => (\r\n   <ul className=\"NavigationItems\">\r\n      <NavigationItem link=\"/\" exact>\r\n         Burger Builder\r\n      </NavigationItem>\r\n      <NavigationItem link=\"/orders\">My Orders</NavigationItem>\r\n   </ul>\r\n)\r\n\r\nexport default navigationItems\r\n","import React from \"react\";\r\nimport LogoModule from \"../../Logo/Logo.module.css\";\r\nimport Logo from \"./../../Logo/Logo\";\r\nimport Backdrop from \"./../../UI/Backdrop/Backdrop\";\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\";\r\nimport \"./SideDrawer.css\";\r\n\r\nconst sideDrawer = props => {\r\n   let attachedClasses = [\"SideDrawer\", \"Close\"]\r\n   if (props.open) {\r\n      attachedClasses = [\"SideDrawer\", \"Open\"]\r\n   }\r\n   return (\r\n      <>\r\n         <Backdrop show={props.open} clicked={props.closed} />\r\n         <div className={attachedClasses.join(\" \")}>\r\n            <div className={LogoModule.Logo}>\r\n               <Logo />\r\n            </div>\r\n            <nav>\r\n               <NavigationItems />\r\n            </nav>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React from \"react\"\r\nimport \"./DrawerToggle.css\"\r\n\r\nconst drawerToggle = props => (\r\n   <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n   </div>\r\n)\r\n\r\nexport default drawerToggle\r\n","import React from \"react\"\r\nimport \"./Toolbar.css\"\r\nimport Logo from \"./../../Logo/Logo\"\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\"\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst toolbar = props => {\r\n   return (\r\n      <header className=\"Toolbar\">\r\n         <DrawerToggle clicked={props.showSideDrawer}></DrawerToggle>\r\n         <Logo />\r\n         <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n         </nav>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default toolbar\r\n","import React, { Component } from \"react\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport \"./Layout.css\";\r\n\r\nclass Layout extends Component {\r\n   state = {\r\n      showSideDrawer: false,\r\n   }\r\n\r\n   sideDrawerClosedHandler = () => {\r\n      this.setState({ showSideDrawer: false })\r\n   }\r\n\r\n   sideDrawerToggleHandler = () => {\r\n      this.setState(prevState => {\r\n         return { showSideDrawer: !this.state.showSideDrawer }\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Toolbar showSideDrawer={this.sideDrawerToggleHandler} />\r\n            <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n            <main className={\"Content\"}>{this.props.children}</main>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport \"./Order.css\"\r\nimport Burger from \"../Burger/Burger\"\r\n\r\nconst order = props => {\r\n   const ingredientOutput = props.ingredients.map((ingredient, index) => {\r\n      return (\r\n         <span\r\n            style={{\r\n               display: \"inline-blick\",\r\n               margin: \"0 8px\",\r\n               border: \"1px solid #ccc\",\r\n               padding: \"5px\",\r\n            }}\r\n            key={index}\r\n         >\r\n            {props.ingredients[index]}\r\n         </span>\r\n      )\r\n   })\r\n\r\n   return (\r\n      <div className=\"Order\">\r\n         <p>Ingredients : {ingredientOutput}</p>\r\n         <p style={{ textAlign: \"center\" }}>\r\n            <strong>Preview</strong>\r\n         </p>\r\n         <Burger ingredients={props.ingredients} classy=\"Burger2\" />\r\n         <p>\r\n            Price: <strong>USD {props.price}</strong>{\" \"}\r\n         </p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default order\r\n","import React, { Component } from \"react\"\r\nimport Order from \"./../../../components/Order/Order\"\r\nimport axiosInstance from \"./../../../axios-orders\"\r\nimport withErrorHandler from \"./../../../hoc/withErrorHandler/withErrorHandler\"\r\nimport Spinner from \"./../../../components/UI/Spinner/Spinner\"\r\n\r\nclass Orders extends Component {\r\n   state = {\r\n      orders: [],\r\n      loading: true,\r\n   }\r\n\r\n   componentDidMount() {\r\n      axiosInstance\r\n         .get(\"/orders.json\")\r\n         .then(res => {\r\n            const fetchedOrders = []\r\n            for (let key in res.data) {\r\n               fetchedOrders.push({\r\n                  ...res.data[key],\r\n                  id: key,\r\n               })\r\n            }\r\n            this.setState({ loading: false, orders: fetchedOrders })\r\n         })\r\n         .catch(err => {\r\n            this.setState({ loading: false })\r\n         })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {this.state.loading ? (\r\n               <Spinner />\r\n            ) : (\r\n               this.state.orders.map(order => (\r\n                  <Order key={order.id} ingredients={order.ingredients} price={order.price} />\r\n               ))\r\n            )}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axiosInstance)\r\n","import React, { Component } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\"\nimport Checkout from \"./containers/Checkout/Checkout\"\nimport Layout from \"./hoc/Layout/Layout\"\nimport Orders from \"./containers/Checkout/Orders/Orders\"\n\nclass App extends Component {\n   render() {\n      return (\n         <Layout>\n            <Switch>\n               <Route path=\"/orders\" component={Orders} />\n               <Route path=\"/checkout\" component={Checkout} />\n               <Route path=\"/\" exact component={BurgerBuilder} />\n               <Route render={() => <h1> 404 PAGE NOT FOUND </h1>} />\n               {/* <Redirect from=\"/\" to=\"/React-Burger-Restaurant\" /> */}\n            </Switch>\n            {/* \n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/checkout\" component={Checkout} /> */}\n         </Layout>\n      )\n   }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst app = (\n   <BrowserRouter basename=\"/React-Burger-Restaurant\">\n      <App />\n   </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}