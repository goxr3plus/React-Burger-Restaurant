{"version":3,"sources":["assets/Images/burger-logo.png","components/Logo/Logo.module.css","axios-orders.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","store/actions/burgerBuilder.js","store/actions/actionsTypes.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","axiosInstance","axios","create","baseURL","button","props","react_default","a","createElement","disabled","className","btnType","join","onClick","clicked","children","OrderSummary","prevProps","prevState","_this","this","ingredientSummary","Object","keys","ingredients","map","ingredient","key","style","textTransform","Fragment","totalPrice","Button_Button","cancelPurchaseHandler","continuePurchaseHandler","Component","loading","type","BuildControl","label","remove","add","controls","BuildControls","toFixed","cntrl","BuildControls_BuildControl_BuildControl","disabledInfo","purchasable","purchaseHandler","BurgerIngredient","withRouter","transformedIngredients","i","Burger_BurgerIngredient_BurgerIngredient","length","textAlign","classy","Backdrop","show","Modal","nextProps","nextState","nextProp","UI_Backdrop_Backdrop","transform","opacity","Spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","error","errorConfirmedHandler","setState","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","respInterceptor","response","res","eject","UI_Modal_Modal","message","BurgerBuilder","purchasing","isBurgerEmpty","purchaseContinueHandler","onInitPurchase","history","push","initIngredients","includes","orderSummary","burger","UI_Spinner_Spinner","Burger_Burger","Burger_BuildControls_BuildControls","addIngredient","removeIngredient","Burger_OrderSummary_OrderSummary","connect","burgerBuilder","dispatch","ingredientName","actions","get","then","catch","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","validationError","ContactData","formIsValid","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","orderHandler","event","preventDefault","formData","elementIdentifier","order","price","orderData","purchaseBurger","inputChangedHandler","identifier","updatedOrderForm","objectSpread","updatedFormElement","target","checkValidity","inputIdentifier","rules","isValid","trim","forElementsArray","id","config","form","onSubmit","formElement","UI_Input_Input","post","orderId","purchaseBurgerSuccess","data","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","Redirect","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","Route","path","match","component","undefined","hack","src","burgerLogo","alt","navigationItem","NavLink","link","exact","activeClassName","classes","active","navigationItems","NavigationItem_NavigationItem","sideDrawer","attachedClasses","open","closed","LogoModule","components_Logo_Logo","NavigationItems_NavigationItems","drawerToggle","toolbar","DrawerToggle_DrawerToggle","showSideDrawer","color","Layout","sideDrawerClosedHandler","sideDrawerToggleHandler","Toolbar_Toolbar","SideDrawer_SideDrawer","ingredientOutput","index","display","border","padding","Orders","onFetchOrders","orders","Order_Order","result","fetchedOrders","err","App","hoc_Layout_Layout","Switch","render","Boolean","window","location","hostname","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","action","updatedIngredients1","newPrice1","updatedIngredients","toConsumableArray","lastIndex","lastIndexOf","newPrice","splice","orderReducer","console","log","newOrder","rootReducer","combineReducers","burgerBuilderReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","basename","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4e8d1a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__sDkRv\"};","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL: \"https://react-my-burger-c7029.firebaseio.com/\",\r\n})\r\n\r\nexport default axiosInstance\r\n","import React from \"react\"\r\nimport \"./Button.css\"\r\n\r\nconst button = props => (\r\n   <button disabled={props.disabled} className={[\"Button\", props.btnType].join(\" \")} onClick={props.clicked}>\r\n      {props.children}\r\n   </button>\r\n)\r\n\r\nexport default button\r\n","import React, { Component } from \"react\"\r\nimport Button from \"./../../UI/Button/Button\"\r\n\r\nclass OrderSummary extends Component {\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // console.log(\"[OrderSummary.js] componentDidUpdate\")\r\n   }\r\n\r\n   render() {\r\n      const ingredientSummary = Object.keys(this.props.ingredients).map(ingredient => {\r\n         return (\r\n            <li key={ingredient}>\r\n               <span style={{ textTransform: \"capitalize\" }}>{ingredient}</span>: {this.props.ingredients[ingredient]}\r\n            </li>\r\n         )\r\n      })\r\n\r\n      return (\r\n         <>\r\n            <h3> Your Order</h3>\r\n            <p> A delicious burger with the following ingredients:</p>\r\n            <ul>{ingredientSummary}</ul>\r\n            <p>\r\n               <strong>Total Price:{this.props.totalPrice}</strong>\r\n            </p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.cancelPurchaseHandler}>\r\n               Cancel\r\n            </Button>\r\n            <Button btnType=\"Success\" clicked={this.props.continuePurchaseHandler}>\r\n               Continue\r\n            </Button>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default OrderSummary\r\n","import * as actionTypes from \"./actionsTypes\"\r\nimport axiosInstance from \"../../axios-orders\"\r\n\r\nexport const addIngredient = ingredientName => {\r\n   return {\r\n      type: actionTypes.ADD_INGREDIENT,\r\n      ingredientName: ingredientName,\r\n   }\r\n}\r\n\r\nexport const removeIngredient = ingredientName => {\r\n   return {\r\n      type: actionTypes.REMOVE_INGREDIENT,\r\n      ingredientName: ingredientName,\r\n   }\r\n}\r\n\r\nexport const setIngredients = ingredients => {\r\n   return {\r\n      type: actionTypes.SET_INGREDIENTS,\r\n      ingredients: ingredients,\r\n   }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n   return {\r\n      type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n   }\r\n}\r\n\r\nexport const loading = loading => {\r\n   return {\r\n      type: actionTypes.LOADING,\r\n      loading: loading,\r\n   }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n   return dispatch => {\r\n      dispatch(loading(true))\r\n      axiosInstance\r\n         .get(\"/ingredients.json\")\r\n         .then(response => {\r\n            dispatch(setIngredients([\"salad\", \"cheese\"]))\r\n            dispatch(loading(false))\r\n         })\r\n         .catch(error => {\r\n            // console.log(\"err\")\r\n            dispatch(fetchIngredientsFailed())\r\n            dispatch(loading(false))\r\n         })\r\n   }\r\n}\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\"\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\"\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\"\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\"\r\nexport const LOADING = \"LOADING\"\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\"\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_SUCCESS\"\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGERS_START\"\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\"\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\"\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\"\r\nexport const FETCH_ORDERS_FAILED = \"FETCH_ORDERS_FAILED\"\r\n","import React from \"react\"\r\nimport \"./BuildControl.css\"\r\n\r\nconst BuildControl = props => (\r\n   <div className={\"BuildControl\"}>\r\n      <div className={\"Label\"}>{props.label}</div>\r\n      <button className={\"Less\"} onClick={props.remove} disabled={props.disabled}>\r\n         Less\r\n      </button>\r\n      <button className={\"More\"} onClick={props.add}>\r\n         More\r\n      </button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControl\r\n","import React from \"react\"\r\nimport \"./BuildControls.css\"\r\nimport BuildControl from \"./BuildControl/BuildControl\"\r\n\r\nconst controls = [\r\n   { label: \"Salad\", type: \"salad\" },\r\n   { label: \"Bacon\", type: \"bacon\" },\r\n   { label: \"Cheese\", type: \"cheese\" },\r\n   { label: \"Meat\", type: \"meat\" },\r\n]\r\n\r\nconst BuildControls = props => (\r\n   <div className={\"BuildControls\"}>\r\n      <p> Current Price: <strong>{props.totalPrice.toFixed(2)}</strong></p>\r\n      {controls.map(cntrl => {\r\n         return (\r\n            <BuildControl\r\n               key={cntrl.label}\r\n               label={cntrl.label}\r\n               add={() => props.add(cntrl.type)}\r\n               remove={() => props.remove(cntrl.type)}\r\n               disabled={props.disabledInfo[cntrl.type]}\r\n            />\r\n         )\r\n      })}\r\n      <button className={\"OrderButton\"} disabled={!props.purchasable} onClick={props.purchaseHandler}>Order Now</button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControls\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './BurgerIngredient.css'\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={\"BreadBottom\"}> </div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={\"BreadTop\"}>\r\n            <div className={\"Seeds1\"}> </div>\r\n            <div className={\"Seeds2\"}> </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={\"Meat\"}> </div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={\"Cheese\"}> </div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={\"Bacon\"}> </div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={\"Salad\"}> </div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\"\r\nimport \"./Burger.css\"\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst burger = props => {\r\n   // console.log(props)\r\n   let transformedIngredients = props.ingredients.map((ingredient, i) => {\r\n      //  console.log(\"Ig Key :\" + igKey)\r\n      return <BurgerIngredient key={ingredient + i} type={ingredient} />\r\n   })\r\n\r\n   if (transformedIngredients.length === 0) transformedIngredients = <p style={{ textAlign: \"center\" }}>Empty!</p>\r\n   return (\r\n      <div className={props.classy == null ? \"Burger\" : \"Burger2\"}>\r\n         <BurgerIngredient type=\"bread-top\" />\r\n         {transformedIngredients}\r\n         <BurgerIngredient type=\"bread-bottom\" />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default withRouter(burger)\r\n","import React from \"react\"\r\nimport \"./Backdrop.css\"\r\n\r\nconst Backdrop = props => (props.show ? <div className={\"Backdrop\"} onClick={props.clicked}/> : null)\r\n\r\nexport default Backdrop\r\n","import React, { Component } from \"react\"\r\nimport Backdrop from \"./../Backdrop/Backdrop\"\r\nimport \"./Modal.css\"\r\n\r\nclass Modal extends Component {\r\n   shouldComponentUpdate(nextProps, nextState) {\r\n      return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n   }\r\n\r\n   componentWillUpdate(nextProp, nextState) {\r\n      // console.log(\"model will update\")\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Backdrop show={this.props.show} clicked={this.props.cancelPurchaseHandler} />\r\n            <div\r\n               className={\"Modal\"}\r\n               style={{\r\n                  transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                  opacity: this.props.show ? \"1\" : \"0\",\r\n               }}\r\n            >\r\n               {this.props.children}\r\n            </div>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Modal\r\n","import React from \"react\"\r\nimport \"./Spinner.css\"\r\n\r\nconst Spinner = props => (\r\n   <div style={{ textAlign: \"center\" }}>\r\n      <div className=\"Loader\" />\r\n   </div>\r\n)\r\n\r\nexport default Spinner\r\n","import React, { Component } from \"react\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\n\r\nconst withErrorHandler = (WrappedComponent, axiosInstance) => {\r\n   return class extends Component {\r\n      state = {\r\n         error: null,\r\n      }\r\n\r\n      componentWillMount() {\r\n         this.reqInterceptor = axiosInstance.interceptors.request.use(req => {\r\n            this.setState({ error: null })\r\n            return req\r\n         })\r\n\r\n         this.respInterceptor = axiosInstance.interceptors.response.use(\r\n            res => res,\r\n            error => {\r\n               this.setState({ error: error })\r\n            }\r\n         )\r\n      }\r\n\r\n      componentWillUnmount() {\r\n         axiosInstance.interceptors.request.eject(this.reqInterceptor)\r\n         axiosInstance.interceptors.response.eject(this.respInterceptor)\r\n      }\r\n\r\n      errorConfirmedHandler = () => {\r\n         this.setState({ error: null })\r\n      }\r\n\r\n      render() {\r\n         return (\r\n            <>\r\n               <Modal show={this.state.error} cancelPurchaseHandler={this.errorConfirmedHandler}>\r\n                  {this.state.error ? this.state.error.message : null}\r\n               </Modal>\r\n               <WrappedComponent {...this.props} />\r\n            </>\r\n         )\r\n      }\r\n   }\r\n}\r\n\r\nexport default withErrorHandler\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport axiosInstance from \"../../axios-orders\"\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport BuildControls from \"./../../components/Burger/BuildControls/BuildControls\"\r\nimport Burger from \"./../../components/Burger/Burger\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\"\r\nimport withErrorHandler from \"./../../hoc/withErrorHandler/withErrorHandler\"\r\n\r\nclass BurgerBuilder extends Component {\r\n   state = {\r\n      purchasing: false,\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.props.initIngredients()\r\n   }\r\n\r\n   isBurgerEmpty = ingredients => {\r\n      return ingredients.length === 0\r\n   }\r\n\r\n   purchaseHandler = () => {\r\n      this.setState({ purchasing: true })\r\n   }\r\n\r\n   cancelPurchaseHandler = () => {\r\n      this.setState({ purchasing: false })\r\n   }\r\n\r\n   purchaseContinueHandler = () => {\r\n      this.props.onInitPurchase()\r\n      this.props.history.push(\"/checkout\")\r\n   }\r\n\r\n   render() {\r\n      const disabledInfo = []\r\n      disabledInfo[\"salad\"] = !this.props.ingredients.includes(\"salad\")\r\n      disabledInfo[\"bacon\"] = !this.props.ingredients.includes(\"bacon\")\r\n      disabledInfo[\"cheese\"] = !this.props.ingredients.includes(\"cheese\")\r\n      disabledInfo[\"meat\"] = !this.props.ingredients.includes(\"meat\")\r\n\r\n      let orderSummary = null\r\n      let burger = this.props.error ? (\r\n         <p style={{ textAlign: \"center\" }}> Ingredients can't be loaded </p>\r\n      ) : (\r\n         <Spinner />\r\n      )\r\n\r\n      if (this.props.ingredients !== null) {\r\n         // Burger\r\n         burger = (\r\n            <>\r\n               <Burger ingredients={this.props.ingredients} />\r\n               <BuildControls\r\n                  disabledInfo={disabledInfo}\r\n                  add={this.props.addIngredient}\r\n                  remove={this.props.removeIngredient}\r\n                  totalPrice={this.props.totalPrice}\r\n                  purchasable={!this.isBurgerEmpty(this.props.ingredients)}\r\n                  purchaseHandler={this.purchaseHandler}\r\n               />\r\n            </>\r\n         )\r\n\r\n         // OrderSummary\r\n         orderSummary = this.props.loading ? (\r\n            <Spinner />\r\n         ) : (\r\n            <OrderSummary\r\n               totalPrice={this.props.totalPrice.toFixed(2)}\r\n               ingredients={this.props.ingredients}\r\n               cancelPurchaseHandler={this.cancelPurchaseHandler}\r\n               continuePurchaseHandler={this.purchaseContinueHandler}\r\n            />\r\n         )\r\n      }\r\n\r\n      if (this.props.loading) orderSummary = <Spinner />\r\n\r\n      return (\r\n         <>\r\n            <Modal show={this.state.purchasing} cancelPurchaseHandler={this.cancelPurchaseHandler}>\r\n               {orderSummary}\r\n            </Modal>\r\n            {!this.props.loading ? burger : orderSummary}\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      error: state.burgerBuilder.error,\r\n      loading: state.burgerBuilder.loading,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      addIngredient: ingredientName => dispatch(actions.addIngredient(ingredientName)),\r\n      removeIngredient: ingredientName => dispatch(actions.removeIngredient(ingredientName)),\r\n      initIngredients: () => dispatch(actions.initIngredients()),\r\n      onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axiosInstance))\r\n","import * as actionTypes from \"./actionsTypes\"\r\nimport axiosInstance from \"../../axios-orders\"\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n      orderId: id,\r\n      orderData: orderData,\r\n   }\r\n}\r\n\r\nexport const purchaseBurgerFail = error => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_FAIL,\r\n      error: error,\r\n   }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_START,\r\n   }\r\n}\r\n\r\nexport const purchaseBurger = orderData => {\r\n   return dispatch => {\r\n      dispatch(purchaseBurgerStart())\r\n      axiosInstance\r\n         .post(\"/orders.json\", orderData)\r\n         .then(response => {\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n         })\r\n         .catch(error => {\r\n            purchaseBurgerFail(error)\r\n         })\r\n   }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n   return {\r\n      type: actionTypes.PURCHASE_INIT,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n      orders: orders,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersFail = error => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_FAILED,\r\n      error: error,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_START,\r\n   }\r\n}\r\nexport const fetchOrders = () => {\r\n   return dispatch => {\r\n      dispatch(fetchOrdersStart())\r\n      axiosInstance\r\n         .get(\"/orders.json\")\r\n         .then(result => {\r\n            const fetchedOrders = []\r\n            for (let key in result.data) {\r\n               fetchedOrders.push({\r\n                  ...result.data[key],\r\n                  id: key,\r\n               })\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders))\r\n         })\r\n         .catch(err => {\r\n            dispatch(fetchOrdersFail(err))\r\n         })\r\n   }\r\n}\r\n","import React from \"react\"\r\nimport Burger from \"./../../Burger/Burger\"\r\nimport Button from \"./../../UI/Button/Button\"\r\nimport \"./CheckoutSummary.css\"\r\n\r\nconst checkoutSummary = props => (\r\n   <div className=\"CheckoutSummary\">\r\n      <h1> We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n         <Burger classy=\" \" ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n         Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n         Continue\r\n      </Button>\r\n   </div>\r\n)\r\n\r\nexport default checkoutSummary\r\n","import React from \"react\"\r\nimport \"./Input.css\"\r\n\r\nconst Input = props => {\r\n   let inputElement = null\r\n   let inputClasses = [\"InputElement\"]\r\n\r\n   if (props.invalid && props.shouldValidate && props.touched) inputClasses.push(\"Invalid\")\r\n\r\n   inputClasses = inputClasses.join(\" \")\r\n\r\n   switch (props.elementType) {\r\n      case \"input\":\r\n         inputElement = (\r\n            <input className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n         )\r\n         break\r\n      case \"textarea\":\r\n         inputElement = (\r\n            <textarea className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n         )\r\n         break\r\n      case \"select\":\r\n         inputElement = (\r\n            <select className={inputClasses} value={props.value} onChange={props.changed}>\r\n               {props.elementConfig.options.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                     {option.displayValue}\r\n                  </option>\r\n               ))}\r\n            </select>\r\n         )\r\n         break\r\n      default:\r\n         inputElement = null\r\n   }\r\n\r\n   let validationError = null\r\n   if (props.invalid && props.touched) {\r\n      validationError = (\r\n         <p className={\"ValidationError\"}>\r\n            <strong>B R O</strong> , focus... <br/> don't make mistakes\r\n         </p>\r\n      )\r\n   }\r\n\r\n   return (\r\n      <div className={\"Input\"}>\r\n         <label>{props.label}</label>\r\n         {inputElement}\r\n         {validationError}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from \"react\"\r\nimport Button from \"../../../components/UI/Button/Button\"\r\nimport axiosInstance from \"./../../../axios-orders\"\r\nimport Input from \"./../../../components/UI/Input/Input\"\r\nimport Spinner from \"./../../../components/UI/Spinner/Spinner\"\r\nimport \"./ContactData.css\"\r\nimport { connect } from \"react-redux\"\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\"\r\nimport * as actions from \"../../../store/actions/index\"\r\n\r\nclass ContactData extends Component {\r\n   state = {\r\n      formIsValid: false,\r\n      orderForm: {\r\n         name: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Your Name\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         street: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Street\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         zipCode: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"ZipCode\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               minLength: 5,\r\n               maxLength: 5,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         country: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Country\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         email: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"email\",\r\n               placeholder: \"Your E-mail\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         deliveryMethod: {\r\n            elementType: \"select\",\r\n            elementConfig: {\r\n               options: [{ value: \"faster\", displayValue: \"Fastest\" }, { value: \"cheapest\", displayValue: \"Cheapest\" }],\r\n            },\r\n            value: \"fastest\",\r\n            touched: false,\r\n            validation: {},\r\n            valid: true,\r\n         },\r\n      },\r\n   }\r\n\r\n   checkValidity(value, rules) {\r\n      let isValid = true\r\n\r\n      if (rules.required) {\r\n         isValid = value.trim() !== \"\" && isValid\r\n      }\r\n\r\n      if (rules.minLength) {\r\n         isValid = value.length >= rules.minLength && isValid\r\n      }\r\n\r\n      if (rules.maxLength) {\r\n         isValid = value.length <= rules.maxLength && isValid\r\n      }\r\n\r\n      return isValid\r\n   }\r\n\r\n   orderHandler = event => {\r\n      event.preventDefault()\r\n      const formData = {}\r\n      for (let elementIdentifier in this.state.orderForm) {\r\n         formData[elementIdentifier] = this.state.orderForm[elementIdentifier].value\r\n      }\r\n\r\n      const order = {\r\n         ingredients: this.props.ingredients,\r\n         price: this.props.totalPrice,\r\n         orderData: formData,\r\n      }\r\n\r\n      this.props.purchaseBurger(order)\r\n   }\r\n\r\n   inputChangedHandler = (event, identifier) => {\r\n      const updatedOrderForm = {\r\n         ...this.state.orderForm,\r\n      }\r\n      const updatedFormElement = { ...updatedOrderForm[identifier] }\r\n\r\n      updatedFormElement.value = event.target.value\r\n      updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n      updatedFormElement.touched = true\r\n      updatedOrderForm[identifier] = updatedFormElement\r\n\r\n      let formIsValid = true\r\n      for (let inputIdentifier in updatedOrderForm) formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n\r\n      this.setState({ formIsValid: formIsValid, orderForm: updatedOrderForm })\r\n   }\r\n\r\n   render() {\r\n      const forElementsArray = []\r\n      for (let key in this.state.orderForm) {\r\n         forElementsArray.push({\r\n            id: key,\r\n            config: this.state.orderForm[key],\r\n         })\r\n      }\r\n\r\n      let form = this.props.loading ? (\r\n         <Spinner />\r\n      ) : (\r\n         <form onSubmit={this.orderHandler}>\r\n            {/* <Input elementType=\"\" elementConfig=\"\" value=\"\" /> */}\r\n            {forElementsArray.map(formElement => (\r\n               <Input\r\n                  key={formElement.id}\r\n                  elementType={formElement.config.elementType}\r\n                  elementConfig={formElement.config.elementConfig}\r\n                  invalid={!formElement.config.valid}\r\n                  value={formElement.config.value}\r\n                  shouldValidate={formElement.config.validation}\r\n                  touched={formElement.config.touched}\r\n                  changed={event => this.inputChangedHandler(event, formElement.id)}\r\n               />\r\n            ))}\r\n            <Button btnType=\"Success\" disabled={!this.state.formIsValid} clicked={this.orderHandler}>\r\n               Order\r\n            </Button>\r\n         </form>\r\n      )\r\n      return (\r\n         <div className={\"ContactData\"}>\r\n            <h4> Enter your contact data</h4>\r\n            {form}\r\n         </div>\r\n      )\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      loading: state.order.loading,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      purchaseBurger: orderData => dispatch(actions.purchaseBurger(orderData)),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(ContactData, axiosInstance))\r\n","// import qs from \"qs\"\r\nimport React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\"\r\nimport ContactData from \"./ContactData/ContactData\"\r\nimport * as actions from \"../../store/actions/index\"\r\n\r\nclass Checkout extends Component {\r\n   checkoutCancelledHandler = () => {\r\n      this.props.history.goBack()\r\n   }\r\n\r\n   checkoutContinuedHandler = () => {\r\n      this.props.history.replace(\"/checkout/contact-data\")\r\n   }\r\n\r\n   render() {\r\n      let summary = <Redirect to=\"/\" />\r\n      // if (this.props.ingredients.length !== 0) {\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null\r\n      summary = (\r\n         <div>\r\n            {purchasedRedirect}\r\n            <CheckoutSummary\r\n               ingredients={this.props.ingredients}\r\n               checkoutCancelled={this.checkoutCancelledHandler}\r\n               checkoutContinued={this.checkoutContinuedHandler}\r\n            />\r\n            <Route path={this.props.match.path + \"/contact-data\"} component={ContactData} />\r\n         </div>\r\n      )\r\n      // }\r\n      return summary\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      purchased: state.order.purchased,\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   null\r\n)(Checkout)\r\n","import React from \"react\"\r\nimport burgerLogo from \"../../assets/Images/burger-logo.png\"\r\nimport \"./Logo.css\"\r\n\r\nconst Logo = props => {\r\n   let logo = props.hack === undefined ? (\r\n      <div className=\"Logo\">\r\n         <img src={burgerLogo} alt=\"My Burger\" />\r\n      </div>\r\n   ) : (\r\n      <div className=\"Logo desktopOnly\">\r\n         <img src={burgerLogo} alt=\"My Burger\" />\r\n      </div>\r\n   )\r\n   return logo\r\n}\r\n\r\nexport default Logo\r\n","import React from \"react\"\r\nimport classes from \"./NavigationItem.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst navigationItem = props => (\r\n   <li className=\"NavigationItem\">\r\n      <NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>{props.children}</NavLink>\r\n   </li>\r\n)\r\n\r\nexport default navigationItem\r\n","import React from \"react\"\r\nimport \"./NavigationItems.css\"\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\"\r\n\r\nconst navigationItems = () => (\r\n   <ul className=\"NavigationItems\">\r\n      <NavigationItem link=\"/\" exact>\r\n         Burger Builder\r\n      </NavigationItem>\r\n      <NavigationItem link=\"/orders\">My Orders</NavigationItem>\r\n   </ul>\r\n)\r\n\r\nexport default navigationItems\r\n","import React from \"react\";\r\nimport LogoModule from \"../../Logo/Logo.module.css\";\r\nimport Logo from \"./../../Logo/Logo\";\r\nimport Backdrop from \"./../../UI/Backdrop/Backdrop\";\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\";\r\nimport \"./SideDrawer.css\";\r\n\r\nconst sideDrawer = props => {\r\n   let attachedClasses = [\"SideDrawer\", \"Close\"]\r\n   if (props.open) {\r\n      attachedClasses = [\"SideDrawer\", \"Open\"]\r\n   }\r\n   return (\r\n      <>\r\n         <Backdrop show={props.open} clicked={props.closed} />\r\n         <div className={attachedClasses.join(\" \")}>\r\n            <div className={LogoModule.Logo}>\r\n               <Logo />\r\n            </div>\r\n            <nav>\r\n               <NavigationItems />\r\n            </nav>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React from \"react\"\r\nimport \"./DrawerToggle.css\"\r\n\r\nconst drawerToggle = props => (\r\n   <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n   </div>\r\n)\r\n\r\nexport default drawerToggle\r\n","import React from \"react\"\r\nimport \"./Toolbar.css\"\r\nimport Logo from \"./../../Logo/Logo\"\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\"\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\"\r\n\r\nconst toolbar = props => {\r\n   return (\r\n      <header className=\"Toolbar\">\r\n         <DrawerToggle clicked={props.showSideDrawer} />\r\n         <Logo hack={true} />\r\n         <nav className=\"desktopOnly\">\r\n            <NavigationItems />\r\n         </nav>\r\n         <p style={{ color: \"white\" }}>V4.0</p>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default toolbar\r\n","import React, { Component } from \"react\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport \"./Layout.css\";\r\n\r\nclass Layout extends Component {\r\n   state = {\r\n      showSideDrawer: false,\r\n   }\r\n\r\n   sideDrawerClosedHandler = () => {\r\n      this.setState({ showSideDrawer: false })\r\n   }\r\n\r\n   sideDrawerToggleHandler = () => {\r\n      this.setState(prevState => {\r\n         return { showSideDrawer: !this.state.showSideDrawer }\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Toolbar showSideDrawer={this.sideDrawerToggleHandler} />\r\n            <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n            <main className={\"Content\"}>{this.props.children}</main>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport \"./Order.css\"\r\nimport Burger from \"../Burger/Burger\"\r\n\r\nconst order = props => {\r\n   const ingredients = props.ingredients === undefined ? [] : props.ingredients\r\n   const ingredientOutput =\r\n      props.ingredients !== undefined\r\n         ? props.ingredients.map((ingredient, index) => {\r\n              return (\r\n                 <span\r\n                    style={{\r\n                       display: \"inline-blick\",\r\n                       margin: \"0 8px\",\r\n                       border: \"1px solid #ccc\",\r\n                       padding: \"5px\",\r\n                    }}\r\n                    key={index}\r\n                 >\r\n                    {props.ingredients[index]}\r\n                 </span>\r\n              )\r\n           })\r\n         : \"No ingredents ( bugged )\"\r\n\r\n   return (\r\n      <div className=\"Order\">\r\n         <p>Ingredients : {ingredientOutput}</p>\r\n         <p style={{ textAlign: \"center\" }}>\r\n            <strong>Preview</strong>\r\n         </p>\r\n         <Burger ingredients={ingredients} classy=\"Burger2\" />\r\n         <p>\r\n            Price: <strong>USD {props.price.toFixed(2)}</strong>\r\n         </p>\r\n         <p>\r\n            Delivery method: <strong>{props.deliveryMethod}</strong>\r\n         </p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default order\r\n","import React, { Component } from \"react\"\r\nimport Order from \"./../../components/Order/Order\"\r\nimport axiosInstance from \"./../../axios-orders\"\r\nimport withErrorHandler from \"./../../hoc/withErrorHandler/withErrorHandler\"\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Orders extends Component {\r\n   componentDidMount() {\r\n      this.props.onFetchOrders()\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {this.props.loading ? (\r\n               <Spinner />\r\n            ) : this.props.orders.length !== 0 ? (\r\n               this.props.orders.map(order => (\r\n                  <Order\r\n                     key={order.id}\r\n                     ingredients={order.ingredients}\r\n                     price={order.price}\r\n                     deliveryMethod={order.orderData.deliveryMethod}\r\n                  />\r\n               ))\r\n            ) : (\r\n               <h1 style={{ textAlign: \"center\" }}>No orders yet :)</h1>\r\n            )}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      orders: state.order.orders,\r\n      loading: state.order.loading,\r\n   }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onFetchOrders: () => dispatch(actions.fetchOrders()),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(Orders, axiosInstance))\r\n","import React, { Component } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\"\nimport Checkout from \"./containers/Checkout/Checkout\"\nimport Layout from \"./hoc/Layout/Layout\"\nimport Orders from \"./containers/Orders/Orders\"\n\nclass App extends Component {\n   render() {\n      return (\n         <Layout>\n            <Switch>\n               <Route path=\"/orders\" component={Orders} />\n               <Route path=\"/checkout\" component={Checkout} />\n               <Route path=\"/\" exact component={BurgerBuilder} />\n               <Route render={() => <h1> 404 PAGE NOT FOUND </h1>} />\n               {/* <Redirect from=\"/\" to=\"/React-Burger-Restaurant\" /> */}\n            </Switch>\n            {/*\n\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/checkout\" component={Checkout} /> */}\n         </Layout>\n      )\n   }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionsTypes\"\r\n\r\nconst INGREDIENT_PRICES = {\r\n   salad: 0.5,\r\n   cheese: 0.4,\r\n   meat: 1.3,\r\n   bacon: 0.7,\r\n}\r\n\r\nconst initialState = {\r\n   ingredients: [],\r\n   totalPrice: 4,\r\n   error: false,\r\n   loading: false,\r\n}\r\n\r\nconst burgerBuilder = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.ADD_INGREDIENT:\r\n         const updatedIngredients1 = state.ingredients.concat(action.ingredientName)\r\n\r\n         //  /* Calculate the New Price */\r\n         const newPrice1 = state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n         //this.updatePurchaseState(updatedIngredients)\r\n\r\n         return {\r\n            ...state,\r\n            ingredients: updatedIngredients1,\r\n            totalPrice: newPrice1,\r\n         }\r\n      case actionTypes.REMOVE_INGREDIENT:\r\n         const updatedIngredients = [...state.ingredients]\r\n         let lastIndex = updatedIngredients.lastIndexOf(action.ingredientName)\r\n         let newPrice = state.totalPrice\r\n\r\n         // Enter if there are ingredients of this type\r\n         if (lastIndex !== -1) {\r\n            // Remove the last ingredient matching this type\r\n            updatedIngredients.splice(lastIndex, 1)\r\n\r\n            /* Calculate the New Price */\r\n            newPrice = state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            //this.updatePurchaseState(updatedIngredients)\r\n         }\r\n\r\n         return {\r\n            ...state,\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice,\r\n         }\r\n      case actionTypes.SET_INGREDIENTS:\r\n         return {\r\n            ...state,\r\n            ingredients: action.ingredients,\r\n            totalPrice: 4,\r\n            error: false,\r\n         }\r\n      case actionTypes.LOADING:\r\n         return {\r\n            ...state,\r\n            loading: action.loading,\r\n         }\r\n      case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n         return {\r\n            ...state,\r\n            loading: action.error,\r\n            error: true,\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default burgerBuilder\r\n","import * as actionTypes from \"../actions/actionsTypes\"\r\n\r\nconst initialState = {\r\n   orders: [],\r\n   loading: false,\r\n   purchased: false,\r\n}\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.PURCHASE_INIT:\r\n         return {\r\n            ...state,\r\n            purchased: false,\r\n         }\r\n      case actionTypes.PURCHASE_BURGER_START:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n         }\r\n      case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n         console.log(\"Successful purchase\")\r\n         const newOrder = {\r\n            ...action.orderData,\r\n            id: action.orderId,\r\n         }\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            orders: state.orders.concat(newOrder),\r\n            purchased: true,\r\n         }\r\n      case actionTypes.PURCHASE_BURGER_FAIL:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n         }\r\n      case actionTypes.FETCH_ORDERS_START:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n         }\r\n      case actionTypes.FETCH_ORDERS_FAILED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n         }\r\n      case actionTypes.FETCH_ORDERS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            orders: action.orders,\r\n            loading: false,\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default orderReducer\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport App from \"./App\"\r\nimport \"./index.css\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\"\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\"\r\nimport orderReducer from \"./store/reducers/order\"\r\nimport { Provider } from \"react-redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst rootReducer = combineReducers({\r\n   burgerBuilder: burgerBuilderReducer,\r\n   order: orderReducer,\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nconst app = (\r\n   <Provider store={store}>\r\n      <BrowserRouter basename=\"/React-Burger-Restaurant\">\r\n         <App />\r\n      </BrowserRouter>\r\n   </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}