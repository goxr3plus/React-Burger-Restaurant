{"version":3,"sources":["assets/Images/burger-logo.png","components/Logo/Logo.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","props","react_default","a","createElement","className","src","burgerLogo","alt","navigationItem","href","link","active","children","navigationItems","NavigationItem_NavigationItem","drawerToggle","onClick","clicked","toolbar","DrawerToggle_DrawerToggle","showSideDrawer","components_Logo_Logo","NavigationItems_NavigationItems","Backdrop","show","sideDrawer","attachedClasses","open","Fragment","UI_Backdrop_Backdrop","closed","join","LogoModule","Layout","state","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","BuildControl","label","remove","disabled","add","controls","BuildControls","totalPrice","toFixed","cntrl","BuildControls_BuildControl_BuildControl","disabledInfo","purchasable","purchaseHandler","Modal","nextProps","nextState","nextProp","console","log","cancelPurchaseHandler","style","transform","opacity","button","btnType","OrderSummary","prevProps","ingredientSummary","textTransform","Button_Button","continuePurchaseHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","purchasing","updatePurchaseState","sum","addIngredientHandler","updatedCount","updatedIngredients","objectSpread","newPrice","removeIngredientHandler","alert","UI_Modal_Modal","Burger_OrderSummary_OrderSummary","Burger_Burger","Burger_BuildControls_BuildControls","App","hoc_Layout_Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c1f3167.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1RykQ\"};","import React from \"react\"\r\nimport burgerLogo from \"../../assets/Images/burger-logo.png\"\r\nimport \"./Logo.css\"\r\n\r\nconst Logo = props => (\r\n   <div className=\"Logo\">\r\n      <img src={burgerLogo} alt=\"My Burger\" />\r\n   </div>\r\n)\r\n\r\nexport default Logo\r\n","import React from \"react\"\r\nimport \"./NavigationItem.css\"\r\n\r\nconst navigationItem = props => (\r\n   <li className=\"NavigationItem\">\r\n      <a href={props.link} className={props.active ? \"active\" : null}>\r\n         {props.children}\r\n      </a>\r\n   </li>\r\n)\r\n\r\nexport default navigationItem\r\n","import React from \"react\"\r\nimport \"./NavigationItems.css\"\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\"\r\n\r\nconst navigationItems = () => (\r\n   <ul className=\"NavigationItems\">\r\n      <NavigationItem link=\"/\" active>\r\n         Burger Builder\r\n      </NavigationItem>\r\n      <NavigationItem link=\"/\">Checkout</NavigationItem>\r\n   </ul>\r\n)\r\n\r\nexport default navigationItems\r\n","import React from \"react\"\r\nimport \"./DrawerToggle.css\"\r\n\r\nconst drawerToggle = props => (\r\n   <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n   </div>\r\n)\r\n\r\nexport default drawerToggle\r\n","import React from \"react\"\r\nimport \"./Toolbar.css\"\r\nimport Logo from \"./../../Logo/Logo\"\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\"\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst toolbar = props => {\r\n   return (\r\n      <header className=\"Toolbar\">\r\n         <DrawerToggle clicked={props.showSideDrawer}></DrawerToggle>\r\n         <Logo />\r\n         <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n         </nav>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default toolbar\r\n","import React from \"react\"\r\nimport \"./Backdrop.css\"\r\n\r\nconst Backdrop = props => (props.show ? <div className={\"Backdrop\"} onClick={props.clicked}/> : null)\r\n\r\nexport default Backdrop\r\n","import React from \"react\";\r\nimport LogoModule from \"../../Logo/Logo.module.css\";\r\nimport Logo from \"./../../Logo/Logo\";\r\nimport Backdrop from \"./../../UI/Backdrop/Backdrop\";\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\";\r\nimport \"./SideDrawer.css\";\r\n\r\nconst sideDrawer = props => {\r\n   let attachedClasses = [\"SideDrawer\", \"Close\"]\r\n   if (props.open) {\r\n      attachedClasses = [\"SideDrawer\", \"Open\"]\r\n   }\r\n   return (\r\n      <>\r\n         <Backdrop show={props.open} clicked={props.closed} />\r\n         <div className={attachedClasses.join(\" \")}>\r\n            <div className={LogoModule.Logo}>\r\n               <Logo />\r\n            </div>\r\n            <nav>\r\n               <NavigationItems />\r\n            </nav>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React from \"react\"\r\nimport \"./Layout.css\"\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\"\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\"\r\nimport { Component } from \"react\"\r\n\r\nclass Layout extends Component {\r\n   state = {\r\n      showSideDrawer: false,\r\n   }\r\n\r\n   sideDrawerClosedHandler = () => {\r\n      this.setState({ showSideDrawer: false })\r\n   }\r\n\r\n   sideDrawerToggleHandler = () => {\r\n      this.setState(prevState => {\r\n         return { showSideDrawer: !this.state.showSideDrawer }\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Toolbar showSideDrawer={this.sideDrawerToggleHandler} />\r\n            <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n            <main className={\"Content\"}>{this.props.children}</main>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './BurgerIngredient.css'\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={\"BreadBottom\"}> </div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={\"BreadTop\"}>\r\n            <div className={\"Seeds1\"}> </div>\r\n            <div className={\"Seeds2\"}> </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={\"Meat\"}> </div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={\"Cheese\"}> </div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={\"Bacon\"}> </div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={\"Salad\"}> </div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\"\r\nimport \"./Burger.css\"\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\"\r\n\r\nconst burger = props => {\r\n   let transformedIngredients = Object.keys(props.ingredients)\r\n      .map(igKey => {\r\n         // console.log(\"Ig Key :\" + igKey)\r\n         return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            // console.log(\"Ig Key +i :\" + igKey + i)\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n         })\r\n      })\r\n      .reduce((arr, el) => {\r\n         return arr.concat(el)\r\n      })\r\n   if (transformedIngredients.length === 0) transformedIngredients = <p>Please start adding ingredients!</p>\r\n   return (\r\n      <div className={\"Burger\"}>\r\n         <BurgerIngredient type=\"bread-top\" />\r\n         {transformedIngredients}\r\n         <BurgerIngredient type=\"bread-bottom\" />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default burger\r\n","import React from \"react\"\r\nimport \"./BuildControl.css\"\r\n\r\nconst BuildControl = props => (\r\n   <div className={\"BuildControl\"}>\r\n      <div className={\"Label\"}>{props.label}</div>\r\n      <button className={\"Less\"} onClick={props.remove} disabled={props.disabled}>\r\n         -\r\n      </button>\r\n      <button className={\"More\"} onClick={props.add}>\r\n         +\r\n      </button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControl\r\n","import React from \"react\"\r\nimport \"./BuildControls.css\"\r\nimport BuildControl from \"./BuildControl/BuildControl\"\r\n\r\nconst controls = [\r\n   { label: \"Salad\", type: \"salad\" },\r\n   { label: \"Bacon\", type: \"bacon\" },\r\n   { label: \"Cheese\", type: \"cheese\" },\r\n   { label: \"Meat\", type: \"meat\" },\r\n]\r\n\r\nconst BuildControls = props => (\r\n   <div className={\"BuildControls\"}>\r\n      <p> Current Price: <strong>{props.totalPrice.toFixed(2)}</strong></p>\r\n      {controls.map(cntrl => {\r\n         return (\r\n            <BuildControl\r\n               key={cntrl.label}\r\n               label={cntrl.label}\r\n               add={() => props.add(cntrl.type)}\r\n               remove={() => props.remove(cntrl.type)}\r\n               disabled={props.disabledInfo[cntrl.type]}\r\n            />\r\n         )\r\n      })}\r\n      <button className={\"OrderButton\"} disabled={!props.purchasable} onClick={props.purchaseHandler}>Order Now</button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControls\r\n","import React, { Component } from \"react\"\r\nimport Backdrop from \"./../Backdrop/Backdrop\"\r\nimport \"./Modal.css\"\r\n\r\nclass Modal extends Component {\r\n   shouldComponentUpdate(nextProps, nextState) {\r\n      return nextProps.show !== this.props.show\r\n   }\r\n\r\n   componentWillUpdate(nextProp, nextState) {\r\n      console.log(\"model will update\")\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Backdrop show={this.props.show} clicked={this.props.cancelPurchaseHandler} />\r\n            <div\r\n               className={\"Modal\"}\r\n               style={{\r\n                  transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                  opacity: this.props.show ? \"1\" : \"0\",\r\n               }}\r\n            >\r\n               {this.props.children}\r\n            </div>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Modal\r\n","import React from \"react\"\r\nimport \"./Button.css\"\r\n\r\nconst button = props => (\r\n   <button className={[\"Button\", props.btnType].join(\" \")} onClick={props.clicked}>\r\n      {props.children}\r\n   </button>\r\n)\r\n\r\nexport default button\r\n","import React, { Component } from \"react\"\r\nimport Button from \"./../../UI/Button/Button\"\r\n\r\nclass OrderSummary extends Component {\r\n   componentDidUpdate(prevProps, prevState) {\r\n      console.log(\"[OrderSummary.js] componentDidUpdate\")\r\n   }\r\n\r\n   render() {\r\n      const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\r\n         return (\r\n            <li key={igKey}>\r\n               <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n            </li>\r\n         )\r\n      })\r\n\r\n      return (\r\n         <>\r\n            <h3> Your Order</h3>\r\n            <p> A delicious burger with the following ingredients:</p>\r\n            <ul>{ingredientSummary}</ul>\r\n            <p>\r\n               <strong>Total Price:{this.props.totalPrice}</strong>\r\n            </p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.cancelPurchaseHandler}>\r\n               Cancel\r\n            </Button>\r\n            <Button btnType=\"Success\" clicked={this.props.continuePurchaseHandler}>\r\n               Continue\r\n            </Button>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default OrderSummary\r\n","import React, { Component } from \"react\"\r\nimport Burger from \"./../../components/Burger/Burger\"\r\nimport BuildControls from \"./../../components/Burger/BuildControls/BuildControls\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\r\n\r\nconst INGREDIENT_PRICES = {\r\n   salad: 0.5,\r\n   cheese: 0.4,\r\n   meat: 1.3,\r\n   bacon: 0.7,\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n   state = {\r\n      ingredients: {\r\n         salad: 0,\r\n         bacon: 0,\r\n         cheese: 0,\r\n         meat: 0,\r\n      },\r\n      totalPrice: 4,\r\n      purchasable: false,\r\n      purchasing: false,\r\n   }\r\n\r\n   updatePurchaseState = ingredients => {\r\n      const sum = Object.keys(ingredients)\r\n         .map(igKey => {\r\n            return ingredients[igKey]\r\n         })\r\n         .reduce((sum, el) => {\r\n            return sum + el\r\n         }, 0)\r\n\r\n      this.setState({ purchasable: sum > 0 })\r\n      console.log(sum)\r\n   }\r\n\r\n   addIngredientHandler = type => {\r\n      const updatedCount = this.state.ingredients[type] + 1\r\n      const updatedIngredients = { ...this.state.ingredients }\r\n      updatedIngredients[type] = updatedCount\r\n\r\n      /* Calculate the New Price */\r\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type]\r\n      this.setState({ totalPrice: newPrice, ingredients: updatedIngredients })\r\n      this.updatePurchaseState(updatedIngredients)\r\n   }\r\n\r\n   removeIngredientHandler = type => {\r\n      if (this.state.ingredients[type] === 0) return\r\n      const updatedCount = this.state.ingredients[type] - 1\r\n      const updatedIngredients = { ...this.state.ingredients }\r\n      updatedIngredients[type] = updatedCount\r\n\r\n      /* Calculate the New Price */\r\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type]\r\n      this.setState({ totalPrice: newPrice, ingredients: updatedIngredients })\r\n      this.updatePurchaseState(updatedIngredients)\r\n   }\r\n\r\n   purchaseHandler = () => {\r\n      this.setState({ purchasing: true })\r\n   }\r\n\r\n   cancelPurchaseHandler = () => {\r\n      this.setState({ purchasing: false })\r\n   }\r\n\r\n   continuePurchaseHandler = () => {\r\n      alert(\"You purchased bitch!\")\r\n   }\r\n\r\n   render() {\r\n      const disabledInfo = {\r\n         ...this.state.ingredients,\r\n      }\r\n\r\n      for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0\r\n\r\n      return (\r\n         <>\r\n            <Modal show={this.state.purchasing} cancelPurchaseHandler={this.cancelPurchaseHandler}>\r\n               <OrderSummary totalPrice={this.state.totalPrice.toFixed(2)} ingredients={this.state.ingredients} cancelPurchaseHandler={this.cancelPurchaseHandler} continuePurchaseHandler={this.continuePurchaseHandler}/>\r\n            </Modal>\r\n            <Burger ingredients={this.state.ingredients} />\r\n            <BuildControls\r\n               disabledInfo={disabledInfo}\r\n               add={this.addIngredientHandler}\r\n               remove={this.removeIngredientHandler}\r\n               totalPrice={this.state.totalPrice}\r\n               purchasable={this.state.purchasable}\r\n               purchaseHandler={this.purchaseHandler}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default BurgerBuilder\r\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <BurgerBuilder></BurgerBuilder>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}