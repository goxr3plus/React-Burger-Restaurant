{"version":3,"sources":["assets/Images/burger-logo.png","components/Logo/Logo.module.css","axios-orders.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","store/actions/burgerBuilder.js","store/actions/actionsTypes.js","store/actions/auth.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","shared/utility.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/Footer/Footer.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","axiosInstance","axios","create","baseURL","Button","props","react_default","a","createElement","disabled","className","btnType","join","onClick","clicked","children","OrderSummary","prevProps","prevState","_this","this","ingredientSummary","Object","keys","ingredients","map","ingredient","key","style","textTransform","Fragment","totalPrice","UI_Button_Button","cancelPurchaseHandler","continuePurchaseHandler","Component","loading","type","authSuccess","idToken","userId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BuildControl","label","remove","add","controls","BuildControls","toFixed","cntrl","BuildControls_BuildControl_BuildControl","disabledInfo","purchasable","purchaseHandler","isAuthenticated","BurgerIngredient","withRouter","transformedIngredients","i","Burger_BurgerIngredient_BurgerIngredient","length","textAlign","classy","Backdrop","show","Modal","nextProps","nextState","nextProp","UI_Backdrop_Backdrop","transform","opacity","Spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","error","errorConfirmedHandler","setState","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","respInterceptor","response","res","eject","UI_Modal_Modal","message","BurgerBuilder","purchasing","isBurgerEmpty","onSetAuthRedirectPath","history","push","purchaseContinueHandler","onInitPurchase","initIngredients","includes","orderSummary","burger","UI_Spinner_Spinner","Burger_Burger","Burger_BuildControls_BuildControls","addIngredient","removeIngredient","Burger_OrderSummary_OrderSummary","connect","burgerBuilder","auth","token","ingredientName","actions","get","then","catch","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","updateObject","oldObject","updatedProperties","objectSpread","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","Input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","autoComplete","options","option","displayValue","validationError","ContactData","formIsValid","orderForm","name","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","orderHandler","event","preventDefault","formData","elementIdentifier","order","price","orderData","purchaseBurger","inputChangedHandler","identifier","updatedFormElement","target","updatedOrderForm","defineProperty","inputIdentifier","forElementsArray","id","config","form","onSubmit","formElement","UI_Input_Input","post","orderId","purchaseBurgerSuccess","data","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","react_router","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","match","component","undefined","hack","src","burgerLogo","alt","navigationItem","react_router_dom","link","exact","activeClassName","classes","active","navigationItems","NavigationItem_NavigationItem","sideDrawer","attachedClasses","open","closed","LogoModule","components_Logo_Logo","NavigationItems_NavigationItems","isAuth","drawerToggle","toolbar","DrawerToggle_DrawerToggle","showSideDrawer","color","Layout","sideDrawerClosedHandler","sideDrawerToggleHandler","Toolbar_Toolbar","SideDrawer_SideDrawer","ingredientOutput","index","display","border","padding","Orders","onFetchOrders","orders","Order_Order","queryParams","console","log","result","fetchedOrders","err","Auth","password","isSignUp","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","burgerBuilding","authRedirectPath","errorMessage","building","url","authData","returnSecureToken","expirationDateTime","Date","getTime","expiresIn","localId","setItem","Map","set","finalMessage","Logout","onLogout","App","tryAutoSignUp","routes","render","from","hoc_Layout_Layout","getItem","expirationDate","Boolean","window","location","hostname","initialState","authStart","action","authFailed","authLogout","reducer","INGREDIENT_PRICES","salad","cheese","meat","bacon","setIngredients","fetchIngredientsFailed","updatedIngredients","toConsumableArray","lastIndex","lastIndexOf","splice","purchaseInit","purchaseBurgerStart","newOrder","purchaseBurgerFail","fetchOrdersStart","fetchOrdersFailed","fetchOrdersSuccess","orderReducer","rootReducer","combineReducers","burgerBuilderReducer","authReducer","process","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","basename","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d44d690.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__sDkRv\"};","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL: \"https://react-my-burger-c7029.firebaseio.com/\",\r\n})\r\n\r\nexport default axiosInstance\r\n","import React from \"react\"\r\nimport \"./Button.css\"\r\n\r\nconst Button = props => (\r\n   <button disabled={props.disabled} className={[\"Button\", props.btnType].join(\" \")} onClick={props.clicked}>\r\n      {props.children}\r\n   </button>\r\n)\r\n\r\nexport default Button\r\n","import React, { Component } from \"react\"\r\nimport Button from \"./../../UI/Button/Button\"\r\n\r\nclass OrderSummary extends Component {\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // console.log(\"[OrderSummary.js] componentDidUpdate\")\r\n   }\r\n\r\n   render() {\r\n      const ingredientSummary = Object.keys(this.props.ingredients).map(ingredient => {\r\n         return (\r\n            <li key={ingredient}>\r\n               <span style={{ textTransform: \"capitalize\" }}>{ingredient}</span>: {this.props.ingredients[ingredient]}\r\n            </li>\r\n         )\r\n      })\r\n\r\n      return (\r\n         <>\r\n            <h3> Your Order</h3>\r\n            <p> A delicious burger with the following ingredients:</p>\r\n            <ul>{ingredientSummary}</ul>\r\n            <p>\r\n               <strong>Total Price:{this.props.totalPrice}</strong>\r\n            </p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.cancelPurchaseHandler}>\r\n               Cancel\r\n            </Button>\r\n            <Button btnType=\"Success\" clicked={this.props.continuePurchaseHandler}>\r\n               Continue\r\n            </Button>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default OrderSummary\r\n","import * as actionTypes from \"./actionsTypes\"\r\nimport axiosInstance from \"../../axios-orders\"\r\n\r\nexport const addIngredient = ingredientName => {\r\n   return {\r\n      type: actionTypes.ADD_INGREDIENT,\r\n      ingredientName: ingredientName,\r\n   }\r\n}\r\n\r\nexport const removeIngredient = ingredientName => {\r\n   return {\r\n      type: actionTypes.REMOVE_INGREDIENT,\r\n      ingredientName: ingredientName,\r\n   }\r\n}\r\n\r\nexport const setIngredients = ingredients => {\r\n   return {\r\n      type: actionTypes.SET_INGREDIENTS,\r\n      ingredients: ingredients,\r\n   }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n   return {\r\n      type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n   }\r\n}\r\n\r\nexport const loading = loading => {\r\n   return {\r\n      type: actionTypes.LOADING,\r\n      loading: loading,\r\n   }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n   return dispatch => {\r\n      dispatch(loading(true))\r\n      axiosInstance\r\n         .get(\"/ingredients.json\")\r\n         .then(response => {\r\n            dispatch(setIngredients([]))\r\n            dispatch(loading(false))\r\n         })\r\n         .catch(error => {\r\n            // console.log(\"err\")\r\n            dispatch(fetchIngredientsFailed())\r\n            dispatch(loading(false))\r\n         })\r\n   }\r\n}\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\"\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\"\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\"\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\"\r\nexport const LOADING = \"LOADING\"\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\"\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_SUCCESS\"\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGERS_START\"\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\"\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\"\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\"\r\nexport const FETCH_ORDERS_FAILED = \"FETCH_ORDERS_FAILED\"\r\n\r\nexport const AUTH_START = \"AUTH_START\"\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\r\nexport const AUTH_FAILED = \"AUTH_FAILED\"\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\"\r\n","import * as actionTypes from \"./actionsTypes\"\r\nimport axios from \"axios\"\r\n\r\nexport const authStart = () => {\r\n   return {\r\n      type: actionTypes.AUTH_START,\r\n   }\r\n}\r\n\r\nexport const authSuccess = (idToken, userId) => {\r\n   return {\r\n      type: actionTypes.AUTH_SUCCESS,\r\n      idToken: idToken,\r\n      userId: userId,\r\n   }\r\n}\r\n\r\nexport const authFailed = error => {\r\n   return {\r\n      type: actionTypes.AUTH_FAILED,\r\n      error: error,\r\n   }\r\n}\r\n\r\nexport const logout = () => {\r\n   //LocalStorage\r\n   localStorage.removeItem(\"token\")\r\n   localStorage.removeItem(\"expirationDate\")\r\n   localStorage.removeItem(\"userId\")\r\n   return {\r\n      type: actionTypes.AUTH_LOGOUT,\r\n   }\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n   return dispatch => {\r\n      setTimeout(() => {\r\n         dispatch(logout())\r\n      }, expirationTime * 1000)\r\n   }\r\n}\r\n\r\nexport const setAuthRedirectPath = path => {\r\n   return {\r\n      type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n      path: path,\r\n   }\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n   return dispatch => {\r\n      dispatch(authStart())\r\n      const apikey = \"AIzaSyD3qjuYkLxsAV4s4csjekchCmeHNBnz6ms\"\r\n      const baseUrl = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\"\r\n      const url = `${baseUrl}${isSignUp ? \"signupNewUser\" : \"verifyPassword\"}?key=${apikey}`\r\n      const authData = {\r\n         email: email,\r\n         password: password,\r\n         returnSecureToken: true,\r\n      }\r\n      console.log(url)\r\n      axios\r\n         .post(url, authData)\r\n         .then(response => {\r\n            console.log(response)\r\n\r\n            //Variables\r\n            const idToken = response.data.idToken\r\n            const expirationDateTime = new Date(\r\n               new Date().getTime() + response.data.expiresIn * 1000\r\n            )\r\n            const userId = response.data.localId\r\n\r\n            //LocalStorage\r\n            localStorage.setItem(\"token\", idToken)\r\n            localStorage.setItem(\"expirationDate\", expirationDateTime)\r\n            localStorage.setItem(\"userId\", userId)\r\n\r\n            //Dispatch\r\n            dispatch(authSuccess(idToken, response.data.localId))\r\n            dispatch(checkAuthTimeout(response.data.expiresIn))\r\n         })\r\n         .catch(err => {\r\n            console.error(err)\r\n            let errorMessage = err.response.data.error.message\r\n\r\n            //Create a Mapper for errors\r\n            let map = new Map()\r\n            map.set(\"INVALID_EMAIL\", \"Email is invalid\")\r\n            map.set(\"MISSING_PASSWORD\", \"Password is missing\")\r\n            map.set(\r\n               \"WEAK_PASSWORD : Password should be at least 6 characters\",\r\n               \"Password should be at least 6 characters\"\r\n            )\r\n\r\n            //Determine the final message\r\n            let finalMessage =\r\n               map.get(errorMessage) !== undefined ? map.get(errorMessage) : errorMessage\r\n            console.log(map.get(errorMessage))\r\n\r\n            //Dispatch Error\r\n            dispatch(authFailed(finalMessage))\r\n         })\r\n   }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n   return dispatch => {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (!token) {\r\n         dispatch(logout())\r\n      } else {\r\n         const expirationDate = new Date(localStorage.getItem(\"expirationDate\"))\r\n\r\n         //Token has expired\r\n         if (expirationDate > new Date()) {\r\n            const userId = localStorage.getItem(\"userId\")\r\n            dispatch(authSuccess(token, userId))\r\n            dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000))\r\n         } else {\r\n            dispatch(logout())\r\n         }\r\n      }\r\n   }\r\n}\r\n","import React from \"react\"\r\nimport \"./BuildControl.css\"\r\n\r\nconst BuildControl = props => (\r\n   <div className={\"BuildControl\"}>\r\n      <div className={\"Label\"}>{props.label}</div>\r\n      <button className={\"Less\"} onClick={props.remove} disabled={props.disabled}>\r\n         Less\r\n      </button>\r\n      <button className={\"More\"} onClick={props.add}>\r\n         More\r\n      </button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControl\r\n","import React from \"react\"\r\nimport \"./BuildControls.css\"\r\nimport BuildControl from \"./BuildControl/BuildControl\"\r\n\r\nconst controls = [\r\n   { label: \"Salad\", type: \"salad\" },\r\n   { label: \"Bacon\", type: \"bacon\" },\r\n   { label: \"Cheese\", type: \"cheese\" },\r\n   { label: \"Meat\", type: \"meat\" },\r\n]\r\n\r\nconst BuildControls = props => (\r\n   <div className={\"BuildControls\"}>\r\n      <p>\r\n         {\" \"}\r\n         Current Price: <strong>{props.totalPrice.toFixed(2)}</strong>\r\n      </p>\r\n      {controls.map(cntrl => {\r\n         return (\r\n            <BuildControl\r\n               key={cntrl.label}\r\n               label={cntrl.label}\r\n               add={() => props.add(cntrl.type)}\r\n               remove={() => props.remove(cntrl.type)}\r\n               disabled={props.disabledInfo[cntrl.type]}\r\n            />\r\n         )\r\n      })}\r\n\r\n      <button\r\n         className={\"OrderButton\"}\r\n         disabled={!props.purchasable}\r\n         onClick={props.purchaseHandler}\r\n      >\r\n         {props.isAuthenticated ? \"Order Now\" : \"Sign Up To Order\"}\r\n      </button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControls\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './BurgerIngredient.css'\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={\"BreadBottom\"}> </div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={\"BreadTop\"}>\r\n            <div className={\"Seeds1\"}> </div>\r\n            <div className={\"Seeds2\"}> </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={\"Meat\"}> </div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={\"Cheese\"}> </div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={\"Bacon\"}> </div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={\"Salad\"}> </div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\"\r\nimport \"./Burger.css\"\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst burger = props => {\r\n   // console.log(props)\r\n   let transformedIngredients = props.ingredients.map((ingredient, i) => {\r\n      //  console.log(\"Ig Key :\" + igKey)\r\n      return <BurgerIngredient key={ingredient + i} type={ingredient} />\r\n   })\r\n\r\n   if (transformedIngredients.length === 0) transformedIngredients = <p style={{ textAlign: \"center\" }}>Empty!</p>\r\n   return (\r\n      <div className={props.classy == null ? \"Burger\" : \"Burger2\"}>\r\n         <BurgerIngredient type=\"bread-top\" />\r\n         {transformedIngredients}\r\n         <BurgerIngredient type=\"bread-bottom\" />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default withRouter(burger)\r\n","import React from \"react\"\r\nimport \"./Backdrop.css\"\r\n\r\nconst Backdrop = props => (props.show ? <div className={\"Backdrop\"} onClick={props.clicked}/> : null)\r\n\r\nexport default Backdrop\r\n","import React, { Component } from \"react\"\r\nimport Backdrop from \"./../Backdrop/Backdrop\"\r\nimport \"./Modal.css\"\r\n\r\nclass Modal extends Component {\r\n   shouldComponentUpdate(nextProps, nextState) {\r\n      return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n   }\r\n\r\n   componentWillUpdate(nextProp, nextState) {\r\n      // console.log(\"model will update\")\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Backdrop show={this.props.show} clicked={this.props.cancelPurchaseHandler} />\r\n            <div\r\n               className={\"Modal\"}\r\n               style={{\r\n                  transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                  opacity: this.props.show ? \"1\" : \"0\",\r\n               }}\r\n            >\r\n               {this.props.children}\r\n            </div>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Modal\r\n","import React from \"react\"\r\nimport \"./Spinner.css\"\r\n\r\nconst Spinner = props => (\r\n   <div style={{ textAlign: \"center\" }}>\r\n      <div className=\"Loader\" />\r\n   </div>\r\n)\r\n\r\nexport default Spinner\r\n","import React, { Component } from \"react\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\n\r\nconst withErrorHandler = (WrappedComponent, axiosInstance) => {\r\n   return class extends Component {\r\n      state = {\r\n         error: null,\r\n      }\r\n\r\n      componentWillMount() {\r\n         this.reqInterceptor = axiosInstance.interceptors.request.use(req => {\r\n            this.setState({ error: null })\r\n            return req\r\n         })\r\n\r\n         this.respInterceptor = axiosInstance.interceptors.response.use(\r\n            res => res,\r\n            error => {\r\n               this.setState({ error: error })\r\n            }\r\n         )\r\n      }\r\n\r\n      componentWillUnmount() {\r\n         axiosInstance.interceptors.request.eject(this.reqInterceptor)\r\n         axiosInstance.interceptors.response.eject(this.respInterceptor)\r\n      }\r\n\r\n      errorConfirmedHandler = () => {\r\n         this.setState({ error: null })\r\n      }\r\n\r\n      render() {\r\n         return (\r\n            <>\r\n               <Modal show={this.state.error} cancelPurchaseHandler={this.errorConfirmedHandler}>\r\n                  {this.state.error ? this.state.error.message : null}\r\n               </Modal>\r\n               <WrappedComponent {...this.props} />\r\n            </>\r\n         )\r\n      }\r\n   }\r\n}\r\n\r\nexport default withErrorHandler\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport axiosInstance from \"../../axios-orders\"\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport BuildControls from \"./../../components/Burger/BuildControls/BuildControls\"\r\nimport Burger from \"./../../components/Burger/Burger\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\"\r\nimport withErrorHandler from \"./../../hoc/withErrorHandler/withErrorHandler\"\r\n\r\nclass BurgerBuilder extends Component {\r\n   state = {\r\n      purchasing: false,\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.props.initIngredients()\r\n      \r\n   }\r\n\r\n   isBurgerEmpty = ingredients => {\r\n      return ingredients.length === 0\r\n   }\r\n\r\n   purchaseHandler = () => {\r\n      if (this.props.isAuthenticated) this.setState({ purchasing: true })\r\n      else {\r\n         this.props.onSetAuthRedirectPath(\"/checkout\")\r\n         this.props.history.push(\"/auth\")\r\n      }\r\n   }\r\n\r\n   cancelPurchaseHandler = () => {\r\n      this.setState({ purchasing: false })\r\n   }\r\n\r\n   purchaseContinueHandler = () => {\r\n      this.props.onInitPurchase()\r\n      this.props.history.push(\"/checkout\")\r\n   }\r\n\r\n   render() {\r\n      const disabledInfo = []\r\n      disabledInfo[\"salad\"] = !this.props.ingredients.includes(\"salad\")\r\n      disabledInfo[\"bacon\"] = !this.props.ingredients.includes(\"bacon\")\r\n      disabledInfo[\"cheese\"] = !this.props.ingredients.includes(\"cheese\")\r\n      disabledInfo[\"meat\"] = !this.props.ingredients.includes(\"meat\")\r\n\r\n      let orderSummary = null\r\n      let burger = this.props.error ? (\r\n         <p style={{ textAlign: \"center\" }}> Ingredients can't be loaded </p>\r\n      ) : (\r\n         <Spinner />\r\n      )\r\n\r\n      if (this.props.ingredients !== null) {\r\n         // Burger\r\n         burger = (\r\n            <>\r\n               <Burger ingredients={this.props.ingredients} />\r\n               <BuildControls\r\n                  disabledInfo={disabledInfo}\r\n                  add={this.props.addIngredient}\r\n                  remove={this.props.removeIngredient}\r\n                  totalPrice={this.props.totalPrice}\r\n                  purchasable={!this.isBurgerEmpty(this.props.ingredients)}\r\n                  purchaseHandler={this.purchaseHandler}\r\n                  isAuthenticated={this.props.isAuthenticated}\r\n               />\r\n            </>\r\n         )\r\n\r\n         // OrderSummary\r\n         orderSummary = this.props.loading ? (\r\n            <Spinner />\r\n         ) : (\r\n            <OrderSummary\r\n               totalPrice={this.props.totalPrice.toFixed(2)}\r\n               ingredients={this.props.ingredients}\r\n               cancelPurchaseHandler={this.cancelPurchaseHandler}\r\n               continuePurchaseHandler={this.purchaseContinueHandler}\r\n            />\r\n         )\r\n      }\r\n\r\n      if (this.props.loading) orderSummary = <Spinner />\r\n\r\n      return (\r\n         <>\r\n            <Modal show={this.state.purchasing} cancelPurchaseHandler={this.cancelPurchaseHandler}>\r\n               {orderSummary}\r\n            </Modal>\r\n            {!this.props.loading ? burger : orderSummary}\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      error: state.burgerBuilder.error,\r\n      loading: state.burgerBuilder.loading,\r\n      isAuthenticated: state.auth.token !== null,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      addIngredient: ingredientName => dispatch(actions.addIngredient(ingredientName)),\r\n      removeIngredient: ingredientName => dispatch(actions.removeIngredient(ingredientName)),\r\n      initIngredients: () => dispatch(actions.initIngredients()),\r\n      onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n      onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path)),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axiosInstance))\r\n","import * as actionTypes from \"./actionsTypes\"\r\nimport axiosInstance from \"../../axios-orders\"\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n      orderId: id,\r\n      orderData: orderData,\r\n   }\r\n}\r\n\r\nexport const purchaseBurgerFail = error => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_FAIL,\r\n      error: error,\r\n   }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_START,\r\n   }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n   return dispatch => {\r\n      dispatch(purchaseBurgerStart())\r\n      axiosInstance\r\n         .post(`/orders.json?auth=${token}`, orderData)\r\n         .then(response => {\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n         })\r\n         .catch(error => {\r\n            purchaseBurgerFail(error)\r\n         })\r\n   }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n   return {\r\n      type: actionTypes.PURCHASE_INIT,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n      orders: orders,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersFail = error => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_FAILED,\r\n      error: error,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_START,\r\n   }\r\n}\r\nexport const fetchOrders = (token, userId) => {\r\n   return dispatch => {\r\n      dispatch(fetchOrdersStart())\r\n      const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n      console.log(queryParams)\r\n      axiosInstance\r\n         .get(`/orders.json` + queryParams)\r\n         .then(result => {\r\n            const fetchedOrders = []\r\n            for (let key in result.data) {\r\n               fetchedOrders.push({\r\n                  ...result.data[key],\r\n                  id: key,\r\n               })\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders))\r\n         })\r\n         .catch(err => {\r\n            dispatch(fetchOrdersFail(err))\r\n         })\r\n   }\r\n}\r\n","import React from \"react\"\r\nimport Burger from \"./../../Burger/Burger\"\r\nimport Button from \"./../../UI/Button/Button\"\r\nimport \"./CheckoutSummary.css\"\r\n\r\nconst checkoutSummary = props => (\r\n   <div className=\"CheckoutSummary\">\r\n      <h1> We hope it tastes well!!!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n         <Burger classy=\" \" ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n         Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n         Continue\r\n      </Button>\r\n   </div>\r\n)\r\n\r\nexport default checkoutSummary\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n   return {\r\n      ...oldObject,\r\n      ...updatedProperties,\r\n   }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => {\r\n   let isValid = true\r\n   if (!rules) {\r\n      return true\r\n   }\r\n\r\n   if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid\r\n   }\r\n\r\n   if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid\r\n   }\r\n\r\n   if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid\r\n   }\r\n\r\n   if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\r\n      isValid = pattern.test(value) && isValid\r\n   }\r\n\r\n   if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/\r\n      isValid = pattern.test(value) && isValid\r\n   }\r\n\r\n   return isValid\r\n}\r\n","import React from \"react\"\r\nimport \"./Input.css\"\r\n\r\nconst Input = props => {\r\n   let inputElement = null\r\n   let inputClasses = [\"InputElement\"]\r\n\r\n   if (props.invalid && props.shouldValidate && props.touched) inputClasses.push(\"Invalid\")\r\n\r\n   inputClasses = inputClasses.join(\" \")\r\n\r\n\r\n   switch (props.elementType) {\r\n      case \"input\":\r\n         inputElement = (\r\n            <input className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} autoComplete=\"\"/>\r\n         )\r\n         break\r\n      case \"textarea\":\r\n         inputElement = (\r\n            <textarea className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n         )\r\n         break\r\n      case \"select\":\r\n         inputElement = (\r\n            <select className={inputClasses} value={props.value} onChange={props.changed}>\r\n               {props.elementConfig.options.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                     {option.displayValue}\r\n                  </option>\r\n               ))}\r\n            </select>\r\n         )\r\n         break\r\n      default:\r\n         inputElement = null\r\n   }\r\n\r\n   let validationError = null\r\n   if (props.invalid && props.touched) {\r\n      validationError = (\r\n         <p className={\"ValidationError\"}>\r\n            <strong>Invalid :')</strong>\r\n         </p>\r\n      )\r\n   }\r\n\r\n   return (\r\n      <div className={\"Input\"}>\r\n         <label>{props.label}</label>\r\n         {inputElement}\r\n         {validationError}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Button from \"../../../components/UI/Button/Button\"\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\"\r\nimport { updateObject, checkValidity } from \"../../../shared/utility\"\r\nimport * as actions from \"../../../store/actions/index\"\r\nimport axiosInstance from \"./../../../axios-orders\"\r\nimport Input from \"./../../../components/UI/Input/Input\"\r\nimport Spinner from \"./../../../components/UI/Spinner/Spinner\"\r\nimport \"./ContactData.css\"\r\n\r\nclass ContactData extends Component {\r\n   state = {\r\n      formIsValid: false,\r\n      orderForm: {\r\n         name: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Your Name\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         street: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Street\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         zipCode: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"ZipCode\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               minLength: 5,\r\n               maxLength: 5,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         country: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Country\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         email: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"email\",\r\n               placeholder: \"Your E-mail\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               isEmail: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         deliveryMethod: {\r\n            elementType: \"select\",\r\n            elementConfig: {\r\n               options: [\r\n                  { value: \"faster\", displayValue: \"Fastest\" },\r\n                  { value: \"cheapest\", displayValue: \"Cheapest\" },\r\n               ],\r\n            },\r\n            value: \"fastest\",\r\n            touched: false,\r\n            validation: {},\r\n            valid: true,\r\n         },\r\n      },\r\n   }\r\n\r\n   orderHandler = event => {\r\n      event.preventDefault()\r\n      const formData = {}\r\n      for (let elementIdentifier in this.state.orderForm) {\r\n         formData[elementIdentifier] = this.state.orderForm[elementIdentifier].value\r\n      }\r\n\r\n      const order = {\r\n         ingredients: this.props.ingredients,\r\n         price: this.props.totalPrice,\r\n         orderData: formData,\r\n         userId: this.props.userId,\r\n      }\r\n\r\n      this.props.purchaseBurger(order, this.props.token)\r\n   }\r\n\r\n   inputChangedHandler = (event, identifier) => {\r\n      const updatedFormElement = updateObject(this.state.orderForm[identifier], {\r\n         value: event.target.value,\r\n         valid: checkValidity(event.target.value, this.state.orderForm[identifier].validation),\r\n         touched: true,\r\n      })\r\n      const updatedOrderForm = updateObject(this.state.orderForm, {\r\n         [identifier]: updatedFormElement,\r\n      })\r\n\r\n      let formIsValid = true\r\n      for (let inputIdentifier in updatedOrderForm)\r\n         formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n\r\n      this.setState({ formIsValid: formIsValid, orderForm: updatedOrderForm })\r\n   }\r\n\r\n   render() {\r\n      const forElementsArray = []\r\n      for (let key in this.state.orderForm) {\r\n         forElementsArray.push({\r\n            id: key,\r\n            config: this.state.orderForm[key],\r\n         })\r\n      }\r\n\r\n      let form = this.props.loading ? (\r\n         <Spinner />\r\n      ) : (\r\n         <form onSubmit={this.orderHandler}>\r\n            {forElementsArray.map(formElement => (\r\n               <Input\r\n                  key={formElement.id}\r\n                  elementType={formElement.config.elementType}\r\n                  elementConfig={formElement.config.elementConfig}\r\n                  invalid={!formElement.config.valid}\r\n                  value={formElement.config.value}\r\n                  shouldValidate={formElement.config.validation}\r\n                  touched={formElement.config.touched}\r\n                  changed={event => this.inputChangedHandler(event, formElement.id)}\r\n               />\r\n            ))}\r\n            <Button\r\n               btnType=\"Success\"\r\n               disabled={!this.state.formIsValid}\r\n               clicked={this.orderHandler}\r\n            >\r\n               Order\r\n            </Button>\r\n         </form>\r\n      )\r\n      return (\r\n         <div className={\"ContactData\"}>\r\n            <h4> Enter your contact data</h4>\r\n            {form}\r\n         </div>\r\n      )\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      loading: state.order.loading,\r\n      token: state.auth.token,\r\n      userId: state.auth.userId,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      purchaseBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token)),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(ContactData, axiosInstance))\r\n","// import qs from \"qs\"\r\nimport React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\"\r\nimport ContactData from \"./ContactData/ContactData\"\r\n\r\nclass Checkout extends Component {\r\n   checkoutCancelledHandler = () => {\r\n      this.props.history.goBack()\r\n   }\r\n\r\n   checkoutContinuedHandler = () => {\r\n      this.props.history.replace(\"/checkout/contact-data\")\r\n   }\r\n\r\n   render() {\r\n      let summary = <Redirect to=\"/\" />\r\n      // if (this.props.ingredients.length !== 0) {\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null\r\n      summary = (\r\n         <div>\r\n            {purchasedRedirect}\r\n            <CheckoutSummary\r\n               ingredients={this.props.ingredients}\r\n               checkoutCancelled={this.checkoutCancelledHandler}\r\n               checkoutContinued={this.checkoutContinuedHandler}\r\n            />\r\n            <Route path={this.props.match.path + \"/contact-data\"} component={ContactData} />\r\n         </div>\r\n      )\r\n      // }\r\n      return summary\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      purchased: state.order.purchased,\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   null\r\n)(Checkout)\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Footer\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport burgerLogo from \"../../assets/Images/burger-logo.png\"\r\nimport \"./Logo.css\"\r\n\r\nconst Logo = props => {\r\n   let logo = props.hack === undefined ? (\r\n      <div className=\"Logo\">\r\n         <img src={burgerLogo} alt=\"My Burger\" />\r\n      </div>\r\n   ) : (\r\n      <div className=\"Logo desktopOnly\">\r\n         <img src={burgerLogo} alt=\"My Burger\" />\r\n      </div>\r\n   )\r\n   return logo\r\n}\r\n\r\nexport default Logo\r\n","import React from \"react\"\r\nimport classes from \"./NavigationItem.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst navigationItem = props => (\r\n   <li className=\"NavigationItem\">\r\n      <NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>{props.children}</NavLink>\r\n   </li>\r\n)\r\n\r\nexport default navigationItem\r\n","import React from \"react\"\r\nimport \"./NavigationItems.css\"\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\"\r\n\r\nconst navigationItems = props => (\r\n   <ul className=\"NavigationItems\">\r\n      <NavigationItem link=\"/\" exact>\r\n         Burger Builder\r\n      </NavigationItem>\r\n      {props.isAuthenticated ? <NavigationItem link=\"/orders\">My Orders</NavigationItem> : null}\r\n      {props.isAuthenticated ? (\r\n         <NavigationItem link=\"/logout\">Log Out</NavigationItem>\r\n      ) : (\r\n         <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n      )}\r\n   </ul>\r\n)\r\n\r\nexport default navigationItems\r\n","import React from \"react\"\r\nimport LogoModule from \"../../Logo/Logo.module.css\"\r\nimport Logo from \"./../../Logo/Logo\"\r\nimport Backdrop from \"./../../UI/Backdrop/Backdrop\"\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\"\r\nimport \"./SideDrawer.css\"\r\n\r\nconst sideDrawer = props => {\r\n   let attachedClasses = [\"SideDrawer\", \"Close\"]\r\n   if (props.open) {\r\n      attachedClasses = [\"SideDrawer\", \"Open\"]\r\n   }\r\n   return (\r\n      <>\r\n         <Backdrop show={props.open} clicked={props.closed} />\r\n         <div className={attachedClasses.join(\" \")} onClick={props.closed}>\r\n            <div className={LogoModule.Logo}>\r\n               <Logo />\r\n            </div>\r\n            <nav>\r\n               <NavigationItems isAuthenticated={props.isAuth} />\r\n            </nav>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React from \"react\"\r\nimport \"./DrawerToggle.css\"\r\n\r\nconst drawerToggle = props => (\r\n   <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n   </div>\r\n)\r\n\r\nexport default drawerToggle\r\n","import React from \"react\"\r\nimport \"./Toolbar.css\"\r\nimport Logo from \"./../../Logo/Logo\"\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\"\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\"\r\n\r\nconst toolbar = props => {\r\n   return (\r\n      <header className=\"Toolbar\">\r\n         <DrawerToggle clicked={props.showSideDrawer} />\r\n         <Logo hack={true} />\r\n         <nav className=\"desktopOnly\">\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n         </nav>\r\n         <p style={{ color: \"white\" }}>V4.0</p>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default toolbar\r\n","import React, { Component } from \"react\"\r\nimport Footer from \"../../containers/Footer/Footer\"\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\"\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\"\r\nimport { connect } from \"react-redux\"\r\nimport \"./Layout.css\"\r\n\r\nclass Layout extends Component {\r\n   state = {\r\n      showSideDrawer: false,\r\n   }\r\n\r\n   sideDrawerClosedHandler = () => {\r\n      this.setState({ showSideDrawer: false })\r\n   }\r\n\r\n   sideDrawerToggleHandler = () => {\r\n      this.setState(prevState => {\r\n         return { showSideDrawer: !this.state.showSideDrawer }\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Toolbar\r\n               showSideDrawer={this.sideDrawerToggleHandler}\r\n               isAuth={this.props.isAuthenticated}\r\n            />\r\n\r\n            <SideDrawer\r\n               open={this.state.showSideDrawer}\r\n               closed={this.sideDrawerClosedHandler}\r\n               isAuth={this.props.isAuthenticated}\r\n            />\r\n            <main className={\"Content\"}>{this.props.children}</main>\r\n            {/* <Footer /> */}\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      isAuthenticated: state.auth.token !== null,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)\r\n","import React from \"react\"\r\nimport \"./Order.css\"\r\nimport Burger from \"../Burger/Burger\"\r\n\r\nconst order = props => {\r\n   const ingredients = props.ingredients === undefined ? [] : props.ingredients\r\n   const ingredientOutput =\r\n      props.ingredients !== undefined\r\n         ? props.ingredients.map((ingredient, index) => {\r\n              return (\r\n                 <span\r\n                    style={{\r\n                       display: \"inline-blick\",\r\n                       margin: \"0 8px\",\r\n                       border: \"1px solid #ccc\",\r\n                       padding: \"5px\",\r\n                    }}\r\n                    key={index}\r\n                 >\r\n                    {props.ingredients[index]}\r\n                 </span>\r\n              )\r\n           })\r\n         : \"No ingredents ( bugged )\"\r\n\r\n   return (\r\n      <div className=\"Order\">\r\n         <p>Ingredients : {ingredientOutput}</p>\r\n         <p style={{ textAlign: \"center\" }}>\r\n            <strong>Preview</strong>\r\n         </p>\r\n         <Burger ingredients={ingredients} classy=\"Burger2\" />\r\n         <p>\r\n            Price: <strong>USD {props.price.toFixed(2)}</strong>\r\n         </p>\r\n         <p>\r\n            Delivery method: <strong>{props.deliveryMethod}</strong>\r\n         </p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default order\r\n","import React, { Component } from \"react\"\r\nimport Order from \"./../../components/Order/Order\"\r\nimport axiosInstance from \"./../../axios-orders\"\r\nimport withErrorHandler from \"./../../hoc/withErrorHandler/withErrorHandler\"\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Orders extends Component {\r\n   componentDidMount() {\r\n      this.props.onFetchOrders(this.props.token, this.props.userId)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {this.props.loading ? (\r\n               <Spinner />\r\n            ) : this.props.orders.length !== 0 ? (\r\n               this.props.orders.map(order => (\r\n                  <Order\r\n                     key={order.id}\r\n                     ingredients={order.ingredients}\r\n                     price={order.price}\r\n                     deliveryMethod={order.orderData.deliveryMethod}\r\n                  />\r\n               ))\r\n            ) : (\r\n               <h1 style={{ textAlign: \"center\" }}>No orders yet :)</h1>\r\n            )}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      orders: state.order.orders,\r\n      loading: state.order.loading,\r\n      token: state.auth.token,\r\n      userId: state.auth.userId,\r\n   }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(Orders, axiosInstance))\r\n","import React, { Component } from \"react\"\r\nimport Input from \"../../components/UI/Input/Input\"\r\nimport Button from \"../../components/UI/Button/Button\"\r\nimport \"./Auth.css\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { updateObject, checkValidity } from \"../../shared/utility\"\r\n\r\nclass Auth extends Component {\r\n   state = {\r\n      controls: {\r\n         email: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"email\",\r\n               placeholder: \"E-Mail Address\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               isEmail: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         password: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"password\",\r\n               placeholder: \"Password\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               minLength: 6,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n      },\r\n      isSignUp: true,\r\n   }\r\n\r\n   componentDidMount() {\r\n      console.log(this.props.burgerBuilding + \" , \" + this.props.authRedirectPath)\r\n      if (!this.props.burgerBuilding && this.props.authRedirectPath) {\r\n         this.props.onSetAuthRedirectPath()\r\n      }\r\n   }\r\n\r\n   inputChangedHandler = (event, controlName) => {\r\n      const updatedControls = updateObject(this.state.controls, {\r\n         [controlName]: updateObject(this.state.controls[controlName], {\r\n            value: event.target.value,\r\n            valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n            touched: true,\r\n         }),\r\n      })\r\n\r\n      this.setState({ controls: updatedControls })\r\n   }\r\n\r\n   submitHandler = event => {\r\n      event.preventDefault()\r\n      this.props.onAuth(\r\n         this.state.controls.email.value,\r\n         this.state.controls.password.value,\r\n         this.state.isSignUp\r\n      )\r\n   }\r\n\r\n   switchAuthModeHandler = () => {\r\n      this.setState(prevState => {\r\n         return {\r\n            isSignUp: !prevState.isSignUp,\r\n         }\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const forElementsArray = []\r\n      for (let key in this.state.controls) {\r\n         forElementsArray.push({\r\n            id: key,\r\n            config: this.state.controls[key],\r\n         })\r\n      }\r\n\r\n      let form = forElementsArray.map(formElement => (\r\n         <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            invalid={!formElement.config.valid}\r\n            value={formElement.config.value}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={event => this.inputChangedHandler(event, formElement.id)}\r\n         />\r\n      ))\r\n      if (this.props.loading) form = <Spinner />\r\n      if (this.props.isAuthenticated) {\r\n         form = <Redirect to={this.props.authRedirectPath} />\r\n      }\r\n\r\n      let errorMessage = null\r\n      if (this.props.error) errorMessage = <p> {this.props.error}</p>\r\n      return (\r\n         <div className=\"Auth\">\r\n            {errorMessage}\r\n            <form onSubmit={this.submitHandler}>\r\n               {form}\r\n               <Button btnType=\"Success\">Submit</Button>\r\n               <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>\r\n                  Switch To {this.state.isSignUp ? \"Sign In\" : \"Sign Up\"}\r\n               </Button>\r\n            </form>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      loading: state.auth.loading,\r\n      error: state.auth.error,\r\n      isAuthenticated: state.auth.token !== null,\r\n      burgerBuilding: state.burgerBuilder.building,\r\n      authRedirectPath: state.auth.authRedirectPath,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n      onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(\"/\")),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Auth)\r\n","import React, { Component } from \"react\"\r\nimport * as actions from \"../../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass Logout extends Component {\r\n   componentDidMount() {\r\n      this.props.onLogout()\r\n   }\r\n\r\n   render() {\r\n      return <Redirect to=\"/\" />\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onLogout: () => dispatch(actions.logout()),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   null,\r\n   mapDispatchToProps\r\n)(Logout)\r\n","import React, { Component } from \"react\"\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\"\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\"\r\nimport Checkout from \"./containers/Checkout/Checkout\"\r\nimport Layout from \"./hoc/Layout/Layout\"\r\nimport Orders from \"./containers/Orders/Orders\"\r\nimport Auth from \"./containers/Auth/Auth\"\r\nimport Logout from \"./containers/Auth/Logout/Logout\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"./store/actions/index\"\r\n\r\nclass App extends Component {\r\n   componentDidMount() {\r\n      this.props.tryAutoSignUp()\r\n   }\r\n\r\n   render() {\r\n      let routes = (\r\n         <Switch>\r\n            <Route path=\"/auth\" component={Auth} />\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n            <Redirect to=\"/\" />\r\n         </Switch>\r\n      )\r\n\r\n      if (this.props.isAuthenticated) {\r\n         routes = (\r\n            <Switch>\r\n               <Route path=\"/checkout\" component={Checkout} />\r\n               <Route path=\"/orders\" component={Orders} />\r\n               <Route path=\"/logout\" component={Logout} />\r\n               <Route path=\"/auth\" component={Auth} />\r\n               <Route path=\"/\" exact component={BurgerBuilder} />\r\n               <Route\r\n                  render={() => (\r\n                     <h1 style={{ textAlign: \"center\" }}>\r\n                        <strong>404 PAGE NOT FOUND </strong>\r\n                     </h1>\r\n                  )}\r\n               />\r\n               <Redirect from=\"/\" to=\"/React-Burger-Restaurant\" />\r\n\r\n               {/* <Redirect from=\"/\" to=\"/React-Burger-Restaurant\" /> */}\r\n            </Switch>\r\n         )\r\n      }\r\n\r\n      return <Layout>{routes}</Layout>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      isAuthenticated: state.auth.token !== null,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      tryAutoSignUp: () => dispatch(actions.authCheckState()),\r\n   }\r\n}\r\n\r\nexport default withRouter(\r\n   connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n   )(App)\r\n)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionsTypes\"\r\nimport { updateObject } from \"../../shared/utility\"\r\n\r\nconst initialState = {\r\n   token: null,\r\n   userId: null,\r\n   error: null,\r\n   loading: false,\r\n   authRedirectPath: \"/\",\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.AUTH_START:\r\n         return authStart(state, action)\r\n      case actionTypes.AUTH_SUCCESS:\r\n         return authSuccess(state, action)\r\n      case actionTypes.AUTH_FAILED:\r\n         return authFailed(state, action)\r\n      case actionTypes.AUTH_LOGOUT:\r\n         return authLogout(state, action)\r\n      case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n         return setAuthRedirectPath(state, action)\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n   return updateObject(state, {\r\n      error: null,\r\n      loading: true,\r\n   })\r\n}\r\nconst authFailed = (state, action) => {\r\n   return updateObject(state, {\r\n      error: action.error,\r\n      loading: false,\r\n   })\r\n}\r\nconst authSuccess = (state, action) => {\r\n   return updateObject(state, {\r\n      token: action.idToken,\r\n      userId: action.userId,\r\n      error: null,\r\n      loading: false,\r\n   })\r\n}\r\nconst authLogout = (state, action) => {\r\n   return updateObject(state, {\r\n      token: null,\r\n      userId: null,\r\n   })\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n   return updateObject(state, {\r\n      authRedirectPath: action.path,\r\n   })\r\n}\r\nexport default reducer\r\n","import * as actionTypes from \"../actions/actionsTypes\"\r\nimport { updateObject } from \"../../shared/utility\"\r\n\r\nconst INGREDIENT_PRICES = {\r\n   salad: 0.5,\r\n   cheese: 0.4,\r\n   meat: 1.3,\r\n   bacon: 0.7,\r\n   building: false,\r\n}\r\n\r\nconst initialState = {\r\n   ingredients: [],\r\n   totalPrice: 4,\r\n   error: false,\r\n   loading: false,\r\n}\r\n\r\nconst burgerBuilder = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.ADD_INGREDIENT:\r\n         return addIngredient(state, action)\r\n      case actionTypes.REMOVE_INGREDIENT:\r\n         return removeIngredient(state, action)\r\n      case actionTypes.SET_INGREDIENTS:\r\n         return setIngredients(state, action)\r\n      case actionTypes.LOADING:\r\n         return loading(state, action)\r\n      case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n         return fetchIngredientsFailed(state, action)\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n   return updateObject(state, {\r\n      ingredients: action.ingredients,\r\n      totalPrice: 4,\r\n      error: false,\r\n      building: false,\r\n   })\r\n}\r\n\r\nconst loading = (state, action) => {\r\n   return updateObject(state, {\r\n      loading: action.loading,\r\n   })\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n   return updateObject(state, {\r\n      loading: action.error,\r\n      error: true,\r\n   })\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n   let updatedIngredients = state.ingredients.concat(action.ingredientName)\r\n   return updateObject(state, {\r\n      ingredients: updatedIngredients,\r\n      totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n      building: true,\r\n   })\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n   let updatedIngredients = [...state.ingredients]\r\n   let lastIndex = updatedIngredients.lastIndexOf(action.ingredientName)\r\n\r\n   // Enter if there are ingredients of this type\r\n   if (lastIndex !== -1) {\r\n      // Remove the last ingredient matching this type\r\n      updatedIngredients.splice(lastIndex, 1)\r\n   }\r\n   return updateObject(state, {\r\n      ingredients: updatedIngredients,\r\n      totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n      building: true,\r\n   })\r\n}\r\n\r\nexport default burgerBuilder\r\n","import * as actionTypes from \"../actions/actionsTypes\"\r\n\r\nconst initialState = {\r\n   orders: [],\r\n   loading: false,\r\n   purchased: false,\r\n}\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.PURCHASE_INIT:\r\n         return purchaseInit(state, action)\r\n      case actionTypes.PURCHASE_BURGER_START:\r\n         return purchaseBurgerStart(state, action)\r\n      case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n         return purchaseBurgerSuccess(state, action)\r\n      case actionTypes.PURCHASE_BURGER_FAIL:\r\n         return purchaseBurgerFail(state, action)\r\n      case actionTypes.FETCH_ORDERS_START:\r\n         return fetchOrdersStart(state, action)\r\n      case actionTypes.FETCH_ORDERS_FAILED:\r\n         return fetchOrdersFailed(state, action)\r\n      case actionTypes.FETCH_ORDERS_SUCCESS:\r\n         return fetchOrdersSuccess(state, action)\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n   return {\r\n      ...state,\r\n      purchased: false,\r\n   }\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n   return {\r\n      ...state,\r\n      loading: true,\r\n   }\r\n}\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n   const newOrder = {\r\n      ...action.orderData,\r\n      id: action.orderId,\r\n   }\r\n   return {\r\n      ...state,\r\n      loading: false,\r\n      orders: state.orders.concat(newOrder),\r\n      purchased: true,\r\n   }\r\n}\r\nconst purchaseBurgerFail = (state, action) => {\r\n   return {\r\n      ...state,\r\n      loading: false,\r\n   }\r\n}\r\nconst fetchOrdersStart = (state, action) => {\r\n   return {\r\n      ...state,\r\n      loading: true,\r\n   }\r\n}\r\nconst fetchOrdersFailed = (state, action) => {\r\n   return {\r\n      ...state,\r\n      loading: false,\r\n   }\r\n}\r\nconst fetchOrdersSuccess = (state, action) => {\r\n   return {\r\n      ...state,\r\n      orders: action.orders,\r\n      loading: false,\r\n   }\r\n}\r\n\r\nexport default orderReducer\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport App from \"./App\"\r\nimport \"./index.css\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport authReducer from \"./store/reducers/auth\"\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\"\r\nimport orderReducer from \"./store/reducers/order\"\r\n\r\nconst rootReducer = combineReducers({\r\n   burgerBuilder: burgerBuilderReducer,\r\n   order: orderReducer,\r\n   auth: authReducer,\r\n})\r\n\r\nconsole.log(process.env.NODE_ENV)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nconst app = (\r\n   <Provider store={store}>\r\n      <BrowserRouter basename=\"/React-Burger-Restaurant\">\r\n         <App />\r\n      </BrowserRouter>\r\n   </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}