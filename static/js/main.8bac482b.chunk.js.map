{"version":3,"sources":["assets/Images/burger-logo.png","components/Logo/Logo.module.css","axios-orders.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","store/actions/burgerBuilder.js","store/actions/actionsTypes.js","store/actions/auth.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/reducers/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","axiosInstance","axios","create","baseURL","Button","props","react_default","a","createElement","disabled","className","btnType","join","onClick","clicked","children","OrderSummary","prevProps","prevState","_this","this","ingredientSummary","Object","keys","ingredients","map","ingredient","key","style","textTransform","Fragment","totalPrice","UI_Button_Button","cancelPurchaseHandler","continuePurchaseHandler","Component","loading","type","auth","email","password","isSignUp","dispatch","url","concat","authData","returnSecureToken","console","log","post","then","res","idToken","localId","expirationTime","data","expiresIn","setTimeout","catch","err","error","errorMessage","response","message","Map","set","finalMessage","undefined","get","BuildControl","label","remove","add","controls","BuildControls","toFixed","cntrl","BuildControls_BuildControl_BuildControl","disabledInfo","purchasable","purchaseHandler","BurgerIngredient","withRouter","transformedIngredients","i","Burger_BurgerIngredient_BurgerIngredient","length","textAlign","classy","Backdrop","show","Modal","nextProps","nextState","nextProp","UI_Backdrop_Backdrop","transform","opacity","Spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","errorConfirmedHandler","setState","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","respInterceptor","eject","UI_Modal_Modal","BurgerBuilder","purchasing","isBurgerEmpty","purchaseContinueHandler","onInitPurchase","history","push","initIngredients","includes","orderSummary","burger","UI_Spinner_Spinner","Burger_Burger","Burger_BuildControls_BuildControls","addIngredient","removeIngredient","Burger_OrderSummary_OrderSummary","connect","burgerBuilder","ingredientName","actions","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","validationError","ContactData","formIsValid","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","deliveryMethod","orderHandler","event","preventDefault","formData","elementIdentifier","order","price","orderData","purchaseBurger","token","inputChangedHandler","identifier","updatedOrderForm","objectSpread","updatedFormElement","target","checkValidity","inputIdentifier","rules","isValid","trim","forElementsArray","id","config","form","onSubmit","formElement","UI_Input_Input","orderId","purchaseBurgerSuccess","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","Redirect","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","Route","path","match","component","hack","src","burgerLogo","alt","navigationItem","NavLink","link","exact","activeClassName","classes","active","navigationItems","NavigationItem_NavigationItem","isAuthenticated","sideDrawer","attachedClasses","open","closed","LogoModule","components_Logo_Logo","NavigationItems_NavigationItems","isAuth","drawerToggle","toolbar","DrawerToggle_DrawerToggle","showSideDrawer","color","Layout","sideDrawerClosedHandler","sideDrawerToggleHandler","Toolbar_Toolbar","SideDrawer_SideDrawer","ingredientOutput","index","display","border","padding","Orders","onFetchOrders","orders","Order_Order","result","fetchedOrders","Auth","isEmail","controlName","updatedControls","defineProperty","submitHandler","authentication","switchAuthModeHandler","test","isNumeric","App","hoc_Layout_Layout","Switch","render","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","setIngredients","action","fetchIngredientsFailed","updatedIngredients","toConsumableArray","lastIndex","lastIndexOf","splice","purchaseInit","purchaseBurgerStart","newOrder","purchaseBurgerFail","fetchOrdersStart","fetchOrdersFailed","fetchOrdersSuccess","orderReducer","userId","authStart","authFailed","authSuccess","authLogout","reducer","rootReducer","combineReducers","burgerBuilderReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","basename","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bac482b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__sDkRv\"};","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL: \"https://react-my-burger-c7029.firebaseio.com/\",\r\n})\r\n\r\nexport default axiosInstance\r\n","import React from \"react\"\r\nimport \"./Button.css\"\r\n\r\nconst Button = props => (\r\n   <button disabled={props.disabled} className={[\"Button\", props.btnType].join(\" \")} onClick={props.clicked}>\r\n      {props.children}\r\n   </button>\r\n)\r\n\r\nexport default Button\r\n","import React, { Component } from \"react\"\r\nimport Button from \"./../../UI/Button/Button\"\r\n\r\nclass OrderSummary extends Component {\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // console.log(\"[OrderSummary.js] componentDidUpdate\")\r\n   }\r\n\r\n   render() {\r\n      const ingredientSummary = Object.keys(this.props.ingredients).map(ingredient => {\r\n         return (\r\n            <li key={ingredient}>\r\n               <span style={{ textTransform: \"capitalize\" }}>{ingredient}</span>: {this.props.ingredients[ingredient]}\r\n            </li>\r\n         )\r\n      })\r\n\r\n      return (\r\n         <>\r\n            <h3> Your Order</h3>\r\n            <p> A delicious burger with the following ingredients:</p>\r\n            <ul>{ingredientSummary}</ul>\r\n            <p>\r\n               <strong>Total Price:{this.props.totalPrice}</strong>\r\n            </p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.cancelPurchaseHandler}>\r\n               Cancel\r\n            </Button>\r\n            <Button btnType=\"Success\" clicked={this.props.continuePurchaseHandler}>\r\n               Continue\r\n            </Button>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default OrderSummary\r\n","import * as actionTypes from \"./actionsTypes\"\r\nimport axiosInstance from \"../../axios-orders\"\r\n\r\nexport const addIngredient = ingredientName => {\r\n   return {\r\n      type: actionTypes.ADD_INGREDIENT,\r\n      ingredientName: ingredientName,\r\n   }\r\n}\r\n\r\nexport const removeIngredient = ingredientName => {\r\n   return {\r\n      type: actionTypes.REMOVE_INGREDIENT,\r\n      ingredientName: ingredientName,\r\n   }\r\n}\r\n\r\nexport const setIngredients = ingredients => {\r\n   return {\r\n      type: actionTypes.SET_INGREDIENTS,\r\n      ingredients: ingredients,\r\n   }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n   return {\r\n      type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n   }\r\n}\r\n\r\nexport const loading = loading => {\r\n   return {\r\n      type: actionTypes.LOADING,\r\n      loading: loading,\r\n   }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n   return dispatch => {\r\n      dispatch(loading(true))\r\n      axiosInstance\r\n         .get(\"/ingredients.json\")\r\n         .then(response => {\r\n            dispatch(setIngredients([\"salad\", \"cheese\"]))\r\n            dispatch(loading(false))\r\n         })\r\n         .catch(error => {\r\n            // console.log(\"err\")\r\n            dispatch(fetchIngredientsFailed())\r\n            dispatch(loading(false))\r\n         })\r\n   }\r\n}\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\"\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\"\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\"\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\"\r\nexport const LOADING = \"LOADING\"\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\"\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_SUCCESS\"\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGERS_START\"\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\"\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\"\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\"\r\nexport const FETCH_ORDERS_FAILED = \"FETCH_ORDERS_FAILED\"\r\n\r\nexport const AUTH_START = \"AUTH_START\"\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\r\nexport const AUTH_FAILED = \"AUTH_FAILED\"\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\r\n\r\n","import * as actionTypes from \"./actionsTypes\"\r\nimport axios from \"axios\"\r\n\r\nexport const authStart = () => {\r\n   return {\r\n      type: actionTypes.AUTH_START,\r\n   }\r\n}\r\n\r\nexport const authSuccess = (idToken, localId) => {\r\n   return {\r\n      type: actionTypes.AUTH_SUCCESS,\r\n      idToken: idToken,\r\n      localId: localId,\r\n   }\r\n}\r\n\r\nexport const authFailed = error => {\r\n   return {\r\n      type: actionTypes.AUTH_FAILED,\r\n      error: error,\r\n   }\r\n}\r\n\r\nexport const logout = () => {\r\n   return {\r\n      type: actionTypes.AUTH_LOGOUT,\r\n   }\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n   return dispatch => {\r\n      setTimeout(() => {\r\n         dispatch(logout())\r\n      }, expirationTime * 1000)\r\n   }\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n   return dispatch => {\r\n      dispatch(authStart())\r\n      const apikey = \"AIzaSyD3qjuYkLxsAV4s4csjekchCmeHNBnz6ms\"\r\n      const baseUrl = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\"\r\n      const url = `${baseUrl}${isSignUp ? \"signupNewUser\" : \"verifyPassword\"}?key=${apikey}`\r\n      const authData = {\r\n         email: email,\r\n         password: password,\r\n         returnSecureToken: true,\r\n      }\r\n      console.log(url)\r\n      axios\r\n         .post(url, authData)\r\n         .then(res => {\r\n            console.log(res)\r\n            dispatch(authSuccess(res.data.idToken, res.data.localId))\r\n            dispatch(checkAuthTimeout(res.data.expiresIn))\r\n         })\r\n         .catch(err => {\r\n            console.error(err)\r\n            let errorMessage = err.response.data.error.message\r\n\r\n            //Create a Mapper for errors\r\n            let map = new Map()\r\n            map.set(\"INVALID_EMAIL\", \"Email is invalid\")\r\n            map.set(\"MISSING_PASSWORD\", \"Password is missing\")\r\n            map.set(\r\n               \"WEAK_PASSWORD : Password should be at least 6 characters\",\r\n               \"Password should be at least 6 characters\"\r\n            )\r\n\r\n            //Determine the final message\r\n            let finalMessage =\r\n               map.get(errorMessage) !== undefined ? map.get(errorMessage) : errorMessage\r\n            console.log(map.get(errorMessage))\r\n\r\n            //Dispatch Error\r\n            dispatch(authFailed(finalMessage))\r\n         })\r\n   }\r\n}\r\n","import React from \"react\"\r\nimport \"./BuildControl.css\"\r\n\r\nconst BuildControl = props => (\r\n   <div className={\"BuildControl\"}>\r\n      <div className={\"Label\"}>{props.label}</div>\r\n      <button className={\"Less\"} onClick={props.remove} disabled={props.disabled}>\r\n         Less\r\n      </button>\r\n      <button className={\"More\"} onClick={props.add}>\r\n         More\r\n      </button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControl\r\n","import React from \"react\"\r\nimport \"./BuildControls.css\"\r\nimport BuildControl from \"./BuildControl/BuildControl\"\r\n\r\nconst controls = [\r\n   { label: \"Salad\", type: \"salad\" },\r\n   { label: \"Bacon\", type: \"bacon\" },\r\n   { label: \"Cheese\", type: \"cheese\" },\r\n   { label: \"Meat\", type: \"meat\" },\r\n]\r\n\r\nconst BuildControls = props => (\r\n   <div className={\"BuildControls\"}>\r\n      <p> Current Price: <strong>{props.totalPrice.toFixed(2)}</strong></p>\r\n      {controls.map(cntrl => {\r\n         return (\r\n            <BuildControl\r\n               key={cntrl.label}\r\n               label={cntrl.label}\r\n               add={() => props.add(cntrl.type)}\r\n               remove={() => props.remove(cntrl.type)}\r\n               disabled={props.disabledInfo[cntrl.type]}\r\n            />\r\n         )\r\n      })}\r\n      <button className={\"OrderButton\"} disabled={!props.purchasable} onClick={props.purchaseHandler}>Order Now</button>\r\n   </div>\r\n)\r\n\r\nexport default BuildControls\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './BurgerIngredient.css'\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={\"BreadBottom\"}> </div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={\"BreadTop\"}>\r\n            <div className={\"Seeds1\"}> </div>\r\n            <div className={\"Seeds2\"}> </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={\"Meat\"}> </div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={\"Cheese\"}> </div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={\"Bacon\"}> </div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={\"Salad\"}> </div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\"\r\nimport \"./Burger.css\"\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst burger = props => {\r\n   // console.log(props)\r\n   let transformedIngredients = props.ingredients.map((ingredient, i) => {\r\n      //  console.log(\"Ig Key :\" + igKey)\r\n      return <BurgerIngredient key={ingredient + i} type={ingredient} />\r\n   })\r\n\r\n   if (transformedIngredients.length === 0) transformedIngredients = <p style={{ textAlign: \"center\" }}>Empty!</p>\r\n   return (\r\n      <div className={props.classy == null ? \"Burger\" : \"Burger2\"}>\r\n         <BurgerIngredient type=\"bread-top\" />\r\n         {transformedIngredients}\r\n         <BurgerIngredient type=\"bread-bottom\" />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default withRouter(burger)\r\n","import React from \"react\"\r\nimport \"./Backdrop.css\"\r\n\r\nconst Backdrop = props => (props.show ? <div className={\"Backdrop\"} onClick={props.clicked}/> : null)\r\n\r\nexport default Backdrop\r\n","import React, { Component } from \"react\"\r\nimport Backdrop from \"./../Backdrop/Backdrop\"\r\nimport \"./Modal.css\"\r\n\r\nclass Modal extends Component {\r\n   shouldComponentUpdate(nextProps, nextState) {\r\n      return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n   }\r\n\r\n   componentWillUpdate(nextProp, nextState) {\r\n      // console.log(\"model will update\")\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Backdrop show={this.props.show} clicked={this.props.cancelPurchaseHandler} />\r\n            <div\r\n               className={\"Modal\"}\r\n               style={{\r\n                  transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                  opacity: this.props.show ? \"1\" : \"0\",\r\n               }}\r\n            >\r\n               {this.props.children}\r\n            </div>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Modal\r\n","import React from \"react\"\r\nimport \"./Spinner.css\"\r\n\r\nconst Spinner = props => (\r\n   <div style={{ textAlign: \"center\" }}>\r\n      <div className=\"Loader\" />\r\n   </div>\r\n)\r\n\r\nexport default Spinner\r\n","import React, { Component } from \"react\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\n\r\nconst withErrorHandler = (WrappedComponent, axiosInstance) => {\r\n   return class extends Component {\r\n      state = {\r\n         error: null,\r\n      }\r\n\r\n      componentWillMount() {\r\n         this.reqInterceptor = axiosInstance.interceptors.request.use(req => {\r\n            this.setState({ error: null })\r\n            return req\r\n         })\r\n\r\n         this.respInterceptor = axiosInstance.interceptors.response.use(\r\n            res => res,\r\n            error => {\r\n               this.setState({ error: error })\r\n            }\r\n         )\r\n      }\r\n\r\n      componentWillUnmount() {\r\n         axiosInstance.interceptors.request.eject(this.reqInterceptor)\r\n         axiosInstance.interceptors.response.eject(this.respInterceptor)\r\n      }\r\n\r\n      errorConfirmedHandler = () => {\r\n         this.setState({ error: null })\r\n      }\r\n\r\n      render() {\r\n         return (\r\n            <>\r\n               <Modal show={this.state.error} cancelPurchaseHandler={this.errorConfirmedHandler}>\r\n                  {this.state.error ? this.state.error.message : null}\r\n               </Modal>\r\n               <WrappedComponent {...this.props} />\r\n            </>\r\n         )\r\n      }\r\n   }\r\n}\r\n\r\nexport default withErrorHandler\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport axiosInstance from \"../../axios-orders\"\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport BuildControls from \"./../../components/Burger/BuildControls/BuildControls\"\r\nimport Burger from \"./../../components/Burger/Burger\"\r\nimport Modal from \"./../../components/UI/Modal/Modal\"\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\"\r\nimport withErrorHandler from \"./../../hoc/withErrorHandler/withErrorHandler\"\r\n\r\nclass BurgerBuilder extends Component {\r\n   state = {\r\n      purchasing: false,\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.props.initIngredients()\r\n   }\r\n\r\n   isBurgerEmpty = ingredients => {\r\n      return ingredients.length === 0\r\n   }\r\n\r\n   purchaseHandler = () => {\r\n      this.setState({ purchasing: true })\r\n   }\r\n\r\n   cancelPurchaseHandler = () => {\r\n      this.setState({ purchasing: false })\r\n   }\r\n\r\n   purchaseContinueHandler = () => {\r\n      this.props.onInitPurchase()\r\n      this.props.history.push(\"/checkout\")\r\n   }\r\n\r\n   render() {\r\n      const disabledInfo = []\r\n      disabledInfo[\"salad\"] = !this.props.ingredients.includes(\"salad\")\r\n      disabledInfo[\"bacon\"] = !this.props.ingredients.includes(\"bacon\")\r\n      disabledInfo[\"cheese\"] = !this.props.ingredients.includes(\"cheese\")\r\n      disabledInfo[\"meat\"] = !this.props.ingredients.includes(\"meat\")\r\n\r\n      let orderSummary = null\r\n      let burger = this.props.error ? (\r\n         <p style={{ textAlign: \"center\" }}> Ingredients can't be loaded </p>\r\n      ) : (\r\n         <Spinner />\r\n      )\r\n\r\n      if (this.props.ingredients !== null) {\r\n         // Burger\r\n         burger = (\r\n            <>\r\n               <Burger ingredients={this.props.ingredients} />\r\n               <BuildControls\r\n                  disabledInfo={disabledInfo}\r\n                  add={this.props.addIngredient}\r\n                  remove={this.props.removeIngredient}\r\n                  totalPrice={this.props.totalPrice}\r\n                  purchasable={!this.isBurgerEmpty(this.props.ingredients)}\r\n                  purchaseHandler={this.purchaseHandler}\r\n               />\r\n            </>\r\n         )\r\n\r\n         // OrderSummary\r\n         orderSummary = this.props.loading ? (\r\n            <Spinner />\r\n         ) : (\r\n            <OrderSummary\r\n               totalPrice={this.props.totalPrice.toFixed(2)}\r\n               ingredients={this.props.ingredients}\r\n               cancelPurchaseHandler={this.cancelPurchaseHandler}\r\n               continuePurchaseHandler={this.purchaseContinueHandler}\r\n            />\r\n         )\r\n      }\r\n\r\n      if (this.props.loading) orderSummary = <Spinner />\r\n\r\n      return (\r\n         <>\r\n            <Modal show={this.state.purchasing} cancelPurchaseHandler={this.cancelPurchaseHandler}>\r\n               {orderSummary}\r\n            </Modal>\r\n            {!this.props.loading ? burger : orderSummary}\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      error: state.burgerBuilder.error,\r\n      loading: state.burgerBuilder.loading,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      addIngredient: ingredientName => dispatch(actions.addIngredient(ingredientName)),\r\n      removeIngredient: ingredientName => dispatch(actions.removeIngredient(ingredientName)),\r\n      initIngredients: () => dispatch(actions.initIngredients()),\r\n      onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axiosInstance))\r\n","import * as actionTypes from \"./actionsTypes\"\r\nimport axiosInstance from \"../../axios-orders\"\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n      orderId: id,\r\n      orderData: orderData,\r\n   }\r\n}\r\n\r\nexport const purchaseBurgerFail = error => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_FAIL,\r\n      error: error,\r\n   }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_START,\r\n   }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n   return dispatch => {\r\n      dispatch(purchaseBurgerStart())\r\n      axiosInstance\r\n         .post(`/orders.json?auth=${token}`, orderData)\r\n         .then(response => {\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n         })\r\n         .catch(error => {\r\n            purchaseBurgerFail(error)\r\n         })\r\n   }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n   return {\r\n      type: actionTypes.PURCHASE_INIT,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n      orders: orders,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersFail = error => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_FAILED,\r\n      error: error,\r\n   }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_START,\r\n   }\r\n}\r\nexport const fetchOrders = token => {\r\n   return dispatch => {\r\n      dispatch(fetchOrdersStart())\r\n      axiosInstance\r\n         .get(`/orders.json?auth=${token}`)\r\n         .then(result => {\r\n            const fetchedOrders = []\r\n            for (let key in result.data) {\r\n               fetchedOrders.push({\r\n                  ...result.data[key],\r\n                  id: key,\r\n               })\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders))\r\n         })\r\n         .catch(err => {\r\n            dispatch(fetchOrdersFail(err))\r\n         })\r\n   }\r\n}\r\n","import React from \"react\"\r\nimport Burger from \"./../../Burger/Burger\"\r\nimport Button from \"./../../UI/Button/Button\"\r\nimport \"./CheckoutSummary.css\"\r\n\r\nconst checkoutSummary = props => (\r\n   <div className=\"CheckoutSummary\">\r\n      <h1> We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n         <Burger classy=\" \" ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n         Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n         Continue\r\n      </Button>\r\n   </div>\r\n)\r\n\r\nexport default checkoutSummary\r\n","import React from \"react\"\r\nimport \"./Input.css\"\r\n\r\nconst Input = props => {\r\n   let inputElement = null\r\n   let inputClasses = [\"InputElement\"]\r\n\r\n   if (props.invalid && props.shouldValidate && props.touched) inputClasses.push(\"Invalid\")\r\n\r\n   inputClasses = inputClasses.join(\" \")\r\n\r\n\r\n   switch (props.elementType) {\r\n      case \"input\":\r\n         inputElement = (\r\n            <input className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n         )\r\n         break\r\n      case \"textarea\":\r\n         inputElement = (\r\n            <textarea className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n         )\r\n         break\r\n      case \"select\":\r\n         inputElement = (\r\n            <select className={inputClasses} value={props.value} onChange={props.changed}>\r\n               {props.elementConfig.options.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                     {option.displayValue}\r\n                  </option>\r\n               ))}\r\n            </select>\r\n         )\r\n         break\r\n      default:\r\n         inputElement = null\r\n   }\r\n\r\n   let validationError = null\r\n   if (props.invalid && props.touched) {\r\n      validationError = (\r\n         <p className={\"ValidationError\"}>\r\n            <strong>Invalid :')</strong>\r\n         </p>\r\n      )\r\n   }\r\n\r\n   return (\r\n      <div className={\"Input\"}>\r\n         <label>{props.label}</label>\r\n         {inputElement}\r\n         {validationError}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from \"react\"\r\nimport Button from \"../../../components/UI/Button/Button\"\r\nimport axiosInstance from \"./../../../axios-orders\"\r\nimport Input from \"./../../../components/UI/Input/Input\"\r\nimport Spinner from \"./../../../components/UI/Spinner/Spinner\"\r\nimport \"./ContactData.css\"\r\nimport { connect } from \"react-redux\"\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\"\r\nimport * as actions from \"../../../store/actions/index\"\r\n\r\nclass ContactData extends Component {\r\n   state = {\r\n      formIsValid: false,\r\n      orderForm: {\r\n         name: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Your Name\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         street: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Street\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         zipCode: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"ZipCode\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               minLength: 5,\r\n               maxLength: 5,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         country: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Country\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         email: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"email\",\r\n               placeholder: \"Your E-mail\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         deliveryMethod: {\r\n            elementType: \"select\",\r\n            elementConfig: {\r\n               options: [\r\n                  { value: \"faster\", displayValue: \"Fastest\" },\r\n                  { value: \"cheapest\", displayValue: \"Cheapest\" },\r\n               ],\r\n            },\r\n            value: \"fastest\",\r\n            touched: false,\r\n            validation: {},\r\n            valid: true,\r\n         },\r\n      },\r\n   }\r\n\r\n   checkValidity(value, rules) {\r\n      let isValid = true\r\n\r\n      if (rules.required) {\r\n         isValid = value.trim() !== \"\" && isValid\r\n      }\r\n\r\n      if (rules.minLength) {\r\n         isValid = value.length >= rules.minLength && isValid\r\n      }\r\n\r\n      if (rules.maxLength) {\r\n         isValid = value.length <= rules.maxLength && isValid\r\n      }\r\n\r\n      return isValid\r\n   }\r\n\r\n   orderHandler = event => {\r\n      event.preventDefault()\r\n      const formData = {}\r\n      for (let elementIdentifier in this.state.orderForm) {\r\n         formData[elementIdentifier] = this.state.orderForm[elementIdentifier].value\r\n      }\r\n\r\n      const order = {\r\n         ingredients: this.props.ingredients,\r\n         price: this.props.totalPrice,\r\n         orderData: formData,\r\n      }\r\n\r\n      this.props.purchaseBurger(order, this.props.token)\r\n   }\r\n\r\n   inputChangedHandler = (event, identifier) => {\r\n      const updatedOrderForm = {\r\n         ...this.state.orderForm,\r\n      }\r\n      const updatedFormElement = { ...updatedOrderForm[identifier] }\r\n\r\n      updatedFormElement.value = event.target.value\r\n      updatedFormElement.valid = this.checkValidity(\r\n         updatedFormElement.value,\r\n         updatedFormElement.validation\r\n      )\r\n      updatedFormElement.touched = true\r\n      updatedOrderForm[identifier] = updatedFormElement\r\n\r\n      let formIsValid = true\r\n      for (let inputIdentifier in updatedOrderForm)\r\n         formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n\r\n      this.setState({ formIsValid: formIsValid, orderForm: updatedOrderForm })\r\n   }\r\n\r\n   render() {\r\n      const forElementsArray = []\r\n      for (let key in this.state.orderForm) {\r\n         forElementsArray.push({\r\n            id: key,\r\n            config: this.state.orderForm[key],\r\n         })\r\n      }\r\n\r\n      let form = this.props.loading ? (\r\n         <Spinner />\r\n      ) : (\r\n         <form onSubmit={this.orderHandler}>\r\n            {forElementsArray.map(formElement => (\r\n               <Input\r\n                  key={formElement.id}\r\n                  elementType={formElement.config.elementType}\r\n                  elementConfig={formElement.config.elementConfig}\r\n                  invalid={!formElement.config.valid}\r\n                  value={formElement.config.value}\r\n                  shouldValidate={formElement.config.validation}\r\n                  touched={formElement.config.touched}\r\n                  changed={event => this.inputChangedHandler(event, formElement.id)}\r\n               />\r\n            ))}\r\n            <Button\r\n               btnType=\"Success\"\r\n               disabled={!this.state.formIsValid}\r\n               clicked={this.orderHandler}\r\n            >\r\n               Order\r\n            </Button>\r\n         </form>\r\n      )\r\n      return (\r\n         <div className={\"ContactData\"}>\r\n            <h4> Enter your contact data</h4>\r\n            {form}\r\n         </div>\r\n      )\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      loading: state.order.loading,\r\n      token: state.auth.token,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      purchaseBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token)),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(ContactData, axiosInstance))\r\n","// import qs from \"qs\"\r\nimport React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\"\r\nimport ContactData from \"./ContactData/ContactData\"\r\nimport * as actions from \"../../store/actions/index\"\r\n\r\nclass Checkout extends Component {\r\n   checkoutCancelledHandler = () => {\r\n      this.props.history.goBack()\r\n   }\r\n\r\n   checkoutContinuedHandler = () => {\r\n      this.props.history.replace(\"/checkout/contact-data\")\r\n   }\r\n\r\n   render() {\r\n      let summary = <Redirect to=\"/\" />\r\n      // if (this.props.ingredients.length !== 0) {\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null\r\n      summary = (\r\n         <div>\r\n            {purchasedRedirect}\r\n            <CheckoutSummary\r\n               ingredients={this.props.ingredients}\r\n               checkoutCancelled={this.checkoutCancelledHandler}\r\n               checkoutContinued={this.checkoutContinuedHandler}\r\n            />\r\n            <Route path={this.props.match.path + \"/contact-data\"} component={ContactData} />\r\n         </div>\r\n      )\r\n      // }\r\n      return summary\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ingredients: state.burgerBuilder.ingredients,\r\n      totalPrice: state.burgerBuilder.totalPrice,\r\n      purchased: state.order.purchased,\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   null\r\n)(Checkout)\r\n","import React from \"react\"\r\nimport burgerLogo from \"../../assets/Images/burger-logo.png\"\r\nimport \"./Logo.css\"\r\n\r\nconst Logo = props => {\r\n   let logo = props.hack === undefined ? (\r\n      <div className=\"Logo\">\r\n         <img src={burgerLogo} alt=\"My Burger\" />\r\n      </div>\r\n   ) : (\r\n      <div className=\"Logo desktopOnly\">\r\n         <img src={burgerLogo} alt=\"My Burger\" />\r\n      </div>\r\n   )\r\n   return logo\r\n}\r\n\r\nexport default Logo\r\n","import React from \"react\"\r\nimport classes from \"./NavigationItem.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst navigationItem = props => (\r\n   <li className=\"NavigationItem\">\r\n      <NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>{props.children}</NavLink>\r\n   </li>\r\n)\r\n\r\nexport default navigationItem\r\n","import React from \"react\"\r\nimport \"./NavigationItems.css\"\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\"\r\n\r\nconst navigationItems = props => (\r\n   <ul className=\"NavigationItems\">\r\n      <NavigationItem link=\"/\" exact>\r\n         Burger Builder\r\n      </NavigationItem>\r\n      <NavigationItem link=\"/orders\">My Orders</NavigationItem>\r\n      {props.isAuthenticated ? (\r\n         <NavigationItem link=\"/logout\">Log Out</NavigationItem>\r\n      ) : (\r\n         <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n      )}\r\n   </ul>\r\n)\r\n\r\nexport default navigationItems\r\n","import React from \"react\"\r\nimport LogoModule from \"../../Logo/Logo.module.css\"\r\nimport Logo from \"./../../Logo/Logo\"\r\nimport Backdrop from \"./../../UI/Backdrop/Backdrop\"\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\"\r\nimport \"./SideDrawer.css\"\r\n\r\nconst sideDrawer = props => {\r\n   let attachedClasses = [\"SideDrawer\", \"Close\"]\r\n   if (props.open) {\r\n      attachedClasses = [\"SideDrawer\", \"Open\"]\r\n   }\r\n   return (\r\n      <>\r\n         <Backdrop show={props.open} clicked={props.closed} />\r\n         <div className={attachedClasses.join(\" \")}>\r\n            <div className={LogoModule.Logo}>\r\n               <Logo />\r\n            </div>\r\n            <nav>\r\n               <NavigationItems isAuthenticated={props.isAuth} />\r\n            </nav>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React from \"react\"\r\nimport \"./DrawerToggle.css\"\r\n\r\nconst drawerToggle = props => (\r\n   <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n   </div>\r\n)\r\n\r\nexport default drawerToggle\r\n","import React from \"react\"\r\nimport \"./Toolbar.css\"\r\nimport Logo from \"./../../Logo/Logo\"\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\"\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\"\r\n\r\nconst toolbar = props => {\r\n   return (\r\n      <header className=\"Toolbar\">\r\n         <DrawerToggle clicked={props.showSideDrawer} />\r\n         <Logo hack={true} />\r\n         <nav className=\"desktopOnly\">\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n         </nav>\r\n         <p style={{ color: \"white\" }}>V4.0</p>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default toolbar\r\n","import React, { Component } from \"react\"\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\"\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\"\r\nimport { connect } from \"react-redux\"\r\nimport \"./Layout.css\"\r\n\r\nclass Layout extends Component {\r\n   state = {\r\n      showSideDrawer: false,\r\n   }\r\n\r\n   sideDrawerClosedHandler = () => {\r\n      this.setState({ showSideDrawer: false })\r\n   }\r\n\r\n   sideDrawerToggleHandler = () => {\r\n      this.setState(prevState => {\r\n         return { showSideDrawer: !this.state.showSideDrawer }\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Toolbar\r\n               showSideDrawer={this.sideDrawerToggleHandler}\r\n               isAuth={this.props.isAuthenticated}\r\n            />\r\n            <SideDrawer\r\n               open={this.state.showSideDrawer}\r\n               closed={this.sideDrawerClosedHandler}\r\n               isAuth={this.props.isAuthenticated}\r\n            />\r\n            <main className={\"Content\"}>{this.props.children}</main>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      isAuthenticated: state.auth.token !== null,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)\r\n","import React from \"react\"\r\nimport \"./Order.css\"\r\nimport Burger from \"../Burger/Burger\"\r\n\r\nconst order = props => {\r\n   const ingredients = props.ingredients === undefined ? [] : props.ingredients\r\n   const ingredientOutput =\r\n      props.ingredients !== undefined\r\n         ? props.ingredients.map((ingredient, index) => {\r\n              return (\r\n                 <span\r\n                    style={{\r\n                       display: \"inline-blick\",\r\n                       margin: \"0 8px\",\r\n                       border: \"1px solid #ccc\",\r\n                       padding: \"5px\",\r\n                    }}\r\n                    key={index}\r\n                 >\r\n                    {props.ingredients[index]}\r\n                 </span>\r\n              )\r\n           })\r\n         : \"No ingredents ( bugged )\"\r\n\r\n   return (\r\n      <div className=\"Order\">\r\n         <p>Ingredients : {ingredientOutput}</p>\r\n         <p style={{ textAlign: \"center\" }}>\r\n            <strong>Preview</strong>\r\n         </p>\r\n         <Burger ingredients={ingredients} classy=\"Burger2\" />\r\n         <p>\r\n            Price: <strong>USD {props.price.toFixed(2)}</strong>\r\n         </p>\r\n         <p>\r\n            Delivery method: <strong>{props.deliveryMethod}</strong>\r\n         </p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default order\r\n","import React, { Component } from \"react\"\r\nimport Order from \"./../../components/Order/Order\"\r\nimport axiosInstance from \"./../../axios-orders\"\r\nimport withErrorHandler from \"./../../hoc/withErrorHandler/withErrorHandler\"\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Orders extends Component {\r\n   componentDidMount() {\r\n      this.props.onFetchOrders(this.props.token)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {this.props.loading ? (\r\n               <Spinner />\r\n            ) : this.props.orders.length !== 0 ? (\r\n               this.props.orders.map(order => (\r\n                  <Order\r\n                     key={order.id}\r\n                     ingredients={order.ingredients}\r\n                     price={order.price}\r\n                     deliveryMethod={order.orderData.deliveryMethod}\r\n                  />\r\n               ))\r\n            ) : (\r\n               <h1 style={{ textAlign: \"center\" }}>No orders yet :)</h1>\r\n            )}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      orders: state.order.orders,\r\n      loading: state.order.loading,\r\n      token: state.auth.token,\r\n   }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onFetchOrders: token => dispatch(actions.fetchOrders(token)),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(Orders, axiosInstance))\r\n","import React, { Component } from \"react\"\r\nimport Input from \"../../components/UI/Input/Input\"\r\nimport Button from \"../../components/UI/Button/Button\"\r\nimport \"./Auth.css\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\"\r\n\r\nclass Auth extends Component {\r\n   state = {\r\n      controls: {\r\n         email: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"email\",\r\n               placeholder: \"Mail Address\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               isEmail: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         password: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"password\",\r\n               placeholder: \"Password\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               minLength: 6,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n      },\r\n      isSignUp: true,\r\n   }\r\n\r\n   checkValidity(value, rules) {\r\n      let isValid = true\r\n      if (!rules) {\r\n         return true\r\n      }\r\n\r\n      if (rules.required) {\r\n         isValid = value.trim() !== \"\" && isValid\r\n      }\r\n\r\n      if (rules.minLength) {\r\n         isValid = value.length >= rules.minLength && isValid\r\n      }\r\n\r\n      if (rules.maxLength) {\r\n         isValid = value.length <= rules.maxLength && isValid\r\n      }\r\n\r\n      if (rules.isEmail) {\r\n         const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\r\n         isValid = pattern.test(value) && isValid\r\n      }\r\n\r\n      if (rules.isNumeric) {\r\n         const pattern = /^\\d+$/\r\n         isValid = pattern.test(value) && isValid\r\n      }\r\n\r\n      return isValid\r\n   }\r\n\r\n   inputChangedHandler = (event, controlName) => {\r\n      const updatedControls = {\r\n         ...this.state.controls,\r\n         [controlName]: {\r\n            ...this.state.controls[controlName],\r\n            value: event.target.value,\r\n            valid: this.checkValidity(\r\n               event.target.value,\r\n               this.state.controls[controlName].validation\r\n            ),\r\n            touched: true,\r\n         },\r\n      }\r\n      this.setState({ controls: updatedControls })\r\n   }\r\n\r\n   submitHandler = event => {\r\n      event.preventDefault()\r\n      this.props.authentication(\r\n         this.state.controls.email.value,\r\n         this.state.controls.password.value,\r\n         this.state.isSignUp\r\n      )\r\n   }\r\n\r\n   switchAuthModeHandler = () => {\r\n      this.setState(prevState => {\r\n         return {\r\n            isSignUp: !prevState.isSignUp,\r\n         }\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const forElementsArray = []\r\n      for (let key in this.state.controls) {\r\n         forElementsArray.push({\r\n            id: key,\r\n            config: this.state.controls[key],\r\n         })\r\n      }\r\n\r\n      let form = forElementsArray.map(formElement => (\r\n         <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            invalid={!formElement.config.valid}\r\n            value={formElement.config.value}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={event => this.inputChangedHandler(event, formElement.id)}\r\n         />\r\n      ))\r\n      if (this.props.loading) form = <Spinner />\r\n\r\n      let errorMessage = null\r\n      if (this.props.error) errorMessage = <p> {this.props.error}</p>\r\n      return (\r\n         <div className=\"Auth\">\r\n            {errorMessage}\r\n            <form onSubmit={this.submitHandler}>\r\n               {form}\r\n               <Button btnType=\"Success\">Submit</Button>\r\n               <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>\r\n                  Switch To {this.state.isSignUp ? \"Sign In\" : \"Sign Up\"}\r\n               </Button>\r\n            </form>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      loading: state.auth.loading,\r\n      error: state.auth.error,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      authentication: (email, password, isSignUp) =>\r\n         dispatch(actions.auth(email, password, isSignUp)),\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Auth)\r\n","import React, { Component } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\"\nimport Checkout from \"./containers/Checkout/Checkout\"\nimport Layout from \"./hoc/Layout/Layout\"\nimport Orders from \"./containers/Orders/Orders\"\nimport Auth from \"./containers/Auth/Auth\";\n\nclass App extends Component {\n   render() {\n      return (\n         <Layout>\n            <Switch>\n               <Route path=\"/auth\" component={Auth} />\n               <Route path=\"/orders\" component={Orders} />\n               <Route path=\"/checkout\" component={Checkout} />\n               <Route path=\"/\" exact component={BurgerBuilder} />\n               <Route render={() => <h1> 404 PAGE NOT FOUND </h1>} />\n               \n               {/* <Redirect from=\"/\" to=\"/React-Burger-Restaurant\" /> */}\n            </Switch>\n            {/*\n\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/checkout\" component={Checkout} /> */}\n         </Layout>\n      )\n   }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n   return {\r\n      ...oldObject,\r\n      ...updatedProperties,\r\n   }\r\n}\r\n","import * as actionTypes from \"../actions/actionsTypes\"\r\nimport { updateObject } from \"./utility\"\r\n\r\nconst INGREDIENT_PRICES = {\r\n   salad: 0.5,\r\n   cheese: 0.4,\r\n   meat: 1.3,\r\n   bacon: 0.7,\r\n}\r\n\r\nconst initialState = {\r\n   ingredients: [],\r\n   totalPrice: 4,\r\n   error: false,\r\n   loading: false,\r\n}\r\n\r\nconst burgerBuilder = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.ADD_INGREDIENT:\r\n         return addIngredient(state, action)\r\n      case actionTypes.REMOVE_INGREDIENT:\r\n         return removeIngredient(state, action)\r\n      case actionTypes.SET_INGREDIENTS:\r\n         return setIngredients(state, action)\r\n      case actionTypes.LOADING:\r\n         return loading(state, action)\r\n      case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n         return fetchIngredientsFailed(state, action)\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n   return updateObject(state, {\r\n      ingredients: action.ingredients,\r\n      totalPrice: 4,\r\n      error: false,\r\n   })\r\n}\r\n\r\nconst loading = (state, action) => {\r\n   return updateObject(state, {\r\n      loading: action.loading,\r\n   })\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n   return updateObject(state, {\r\n      loading: action.error,\r\n      error: true,\r\n   })\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n   let updatedIngredients = state.ingredients.concat(action.ingredientName)\r\n   return updateObject(state, {\r\n      ingredients: updatedIngredients,\r\n      totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n   })\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n   let updatedIngredients = [...state.ingredients]\r\n   let lastIndex = updatedIngredients.lastIndexOf(action.ingredientName)\r\n\r\n   // Enter if there are ingredients of this type\r\n   if (lastIndex !== -1) {\r\n      // Remove the last ingredient matching this type\r\n      updatedIngredients.splice(lastIndex, 1)\r\n   }\r\n   return updateObject(state, {\r\n      ingredients: updatedIngredients,\r\n      totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n   })\r\n}\r\n\r\nexport default burgerBuilder\r\n","import * as actionTypes from \"../actions/actionsTypes\"\r\n\r\nconst initialState = {\r\n   orders: [],\r\n   loading: false,\r\n   purchased: false,\r\n}\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.PURCHASE_INIT:\r\n         return purchaseInit(state, action)\r\n      case actionTypes.PURCHASE_BURGER_START:\r\n         return purchaseBurgerStart(state, action)\r\n      case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n         return purchaseBurgerSuccess(state, action)\r\n      case actionTypes.PURCHASE_BURGER_FAIL:\r\n         return purchaseBurgerFail(state, action)\r\n      case actionTypes.FETCH_ORDERS_START:\r\n         return fetchOrdersStart(state, action)\r\n      case actionTypes.FETCH_ORDERS_FAILED:\r\n         return fetchOrdersFailed(state, action)\r\n      case actionTypes.FETCH_ORDERS_SUCCESS:\r\n         return fetchOrdersSuccess(state, action)\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n   return {\r\n      ...state,\r\n      purchased: false,\r\n   }\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n   return {\r\n      ...state,\r\n      loading: true,\r\n   }\r\n}\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n   const newOrder = {\r\n      ...action.orderData,\r\n      id: action.orderId,\r\n   }\r\n   return {\r\n      ...state,\r\n      loading: false,\r\n      orders: state.orders.concat(newOrder),\r\n      purchased: true,\r\n   }\r\n}\r\nconst purchaseBurgerFail = (state, action) => {\r\n   return {\r\n      ...state,\r\n      loading: false,\r\n   }\r\n}\r\nconst fetchOrdersStart = (state, action) => {\r\n   return {\r\n      ...state,\r\n      loading: true,\r\n   }\r\n}\r\nconst fetchOrdersFailed = (state, action) => {\r\n   return {\r\n      ...state,\r\n      loading: false,\r\n   }\r\n}\r\nconst fetchOrdersSuccess = (state, action) => {\r\n   return {\r\n      ...state,\r\n      orders: action.orders,\r\n      loading: false,\r\n   }\r\n}\r\n\r\nexport default orderReducer\r\n","import * as actionTypes from \"../actions/actionsTypes\"\r\nimport { updateObject } from \"./utility\"\r\n\r\nconst initialState = {\r\n   token: null,\r\n   userId: null,\r\n   error: null,\r\n   loading: false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.AUTH_START:\r\n         return authStart(state, action)\r\n      case actionTypes.AUTH_SUCCESS:\r\n         return authSuccess(state, action)\r\n      case actionTypes.AUTH_FAILED:\r\n         return authFailed(state, action)\r\n      case actionTypes.AUTH_LOGOUT:\r\n         return authLogout(state, action)\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n   return updateObject(state, {\r\n      error: null,\r\n      loading: true,\r\n   })\r\n}\r\nconst authFailed = (state, action) => {\r\n   return updateObject(state, {\r\n      error: action.error,\r\n      loading: false,\r\n   })\r\n}\r\nconst authSuccess = (state, action) => {\r\n   return updateObject(state, {\r\n      token: action.idToken,\r\n      userId: action.localId,\r\n      error: null,\r\n      loading: false,\r\n   })\r\n}\r\nconst authLogout = (state, action) => {\r\n   return updateObject(state, {\r\n      token: null,\r\n      userId: null,\r\n   })\r\n}\r\nexport default reducer\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport App from \"./App\"\r\nimport \"./index.css\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\"\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\"\r\nimport orderReducer from \"./store/reducers/order\"\r\nimport thunk from \"redux-thunk\"\r\nimport authReducer from \"./store/reducers/auth\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nconst rootReducer = combineReducers({\r\n   burgerBuilder: burgerBuilderReducer,\r\n   order: orderReducer,\r\n   auth: authReducer,\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nconst app = (\r\n   <Provider store={store}>\r\n      <BrowserRouter basename=\"/React-Burger-Restaurant\">\r\n         <App />\r\n      </BrowserRouter>\r\n   </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}